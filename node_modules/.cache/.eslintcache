[{"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/2. betterbank_without_backend/src/index.js":"1","/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/2. betterbank_without_backend/src/App.js":"2","/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/2. betterbank_without_backend/src/reportWebVitals.js":"3","/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/2. betterbank_without_backend/src/myContext/MyContext.js":"4","/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/2. betterbank_without_backend/src/components/Navbar.js":"5","/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/2. betterbank_without_backend/src/components/Withdraw.js":"6","/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/2. betterbank_without_backend/src/components/Deposit.js":"7","/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/2. betterbank_without_backend/src/components/AllData.js":"8","/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/2. betterbank_without_backend/src/components/Login.js":"9","/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/2. betterbank_without_backend/src/components/CreateAccount.js":"10","/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/2. betterbank_without_backend/src/components/Card.js":"11","/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/index.js":"12","/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/App.js":"13","/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/reportWebVitals.js":"14","/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/myContext/MyContext.js":"15","/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/components/Navbar.js":"16","/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/pages/Login.js":"17","/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/components/Card.js":"18","/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/pages/Deposit.js":"19","/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/pages/CreateAccount.js":"20","/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/pages/AllData.js":"21","/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/pages/Withdraw.js":"22","/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/pages/Transfer.js":"23","/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/pages/Invest.js":"24"},{"size":345,"mtime":1646187601119,"results":"25","hashOfConfig":"26"},{"size":848,"mtime":1646348760744,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1638412878286,"results":"28","hashOfConfig":"26"},{"size":14538,"mtime":1646374192900,"results":"29","hashOfConfig":"26"},{"size":3781,"mtime":1646438178270,"results":"30","hashOfConfig":"26"},{"size":1471,"mtime":1646439962710,"results":"31","hashOfConfig":"26"},{"size":1600,"mtime":1646439953697,"results":"32","hashOfConfig":"26"},{"size":1742,"mtime":1646187466152,"results":"33","hashOfConfig":"26"},{"size":2603,"mtime":1646439537174,"results":"34","hashOfConfig":"26"},{"size":2717,"mtime":1646437570138,"results":"35","hashOfConfig":"26"},{"size":973,"mtime":1646351071098,"results":"36","hashOfConfig":"26"},{"size":345,"mtime":1646187601119,"results":"37","hashOfConfig":"38"},{"size":946,"mtime":1648090071258,"results":"39","hashOfConfig":"38"},{"size":362,"mtime":1638412878286,"results":"40","hashOfConfig":"38"},{"size":17093,"mtime":1648091945975,"results":"41","hashOfConfig":"38"},{"size":4483,"mtime":1647983910795,"results":"42","hashOfConfig":"38"},{"size":3633,"mtime":1648091916499,"results":"43","hashOfConfig":"38"},{"size":1292,"mtime":1647731215113,"results":"44","hashOfConfig":"38"},{"size":3556,"mtime":1648091924195,"results":"45","hashOfConfig":"38"},{"size":4375,"mtime":1648091951467,"results":"46","hashOfConfig":"38"},{"size":3365,"mtime":1648091947789,"results":"47","hashOfConfig":"38"},{"size":3502,"mtime":1648091915123,"results":"48","hashOfConfig":"38"},{"size":3676,"mtime":1648078962158,"results":"49","hashOfConfig":"38"},{"size":3448,"mtime":1648080260496,"results":"50","hashOfConfig":"38"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xm6weq",{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},"e26ml3",{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"87"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"87"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"87"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"87"},"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/2. betterbank_without_backend/src/index.js",[],[],"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/2. betterbank_without_backend/src/App.js",[],[],"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/2. betterbank_without_backend/src/reportWebVitals.js",[],[],"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/2. betterbank_without_backend/src/myContext/MyContext.js",["130","131","132","133","134","135","136","137","138","139","140","141"],[],"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/2. betterbank_without_backend/src/components/Navbar.js",["142"],[],"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/2. betterbank_without_backend/src/components/Withdraw.js",[],[],"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/2. betterbank_without_backend/src/components/Deposit.js",[],[],"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/2. betterbank_without_backend/src/components/AllData.js",[],[],"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/2. betterbank_without_backend/src/components/Login.js",["143"],[],"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/2. betterbank_without_backend/src/components/CreateAccount.js",["144"],[],"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/2. betterbank_without_backend/src/components/Card.js",["145"],[],"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/index.js",[],[],["146","147"],"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/App.js",[],[],"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/reportWebVitals.js",[],[],"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/myContext/MyContext.js",["148","149","150","151","152","153","154","155","156","157","158","159","160"],[],"import React, {createContext, useState} from \"react\";\nimport Cookies from \"js-cookie\";\n\nconst MyContext = createContext();\n\n\nfunction MyContextProvider({children}) {\n\n\tconst [firstName, setFirstName] = useState(\"\");\n\tconst [lastName, setLastName] = useState(\"\");\n\tconst [firstNameError, setFirstNameError] = useState(\"\");\n\tconst [lastNameError, setLastNameError] = useState(\"\");\n\n\tconst [userName, setUserName] = useState(\"\");\n\tconst [userNameError, setUserNameError] = useState(\"\");\n\tconst [users, setUsers] = useState([]);\n\tconst [destinationUser, setDestinationUser] = useState(\"\");\n\n\tconst [loggedInUserName, setLoggedInUserName] = useState(\"\")\n\tconst [showLoggedInMsg, setShowLoggedInMsg] = useState(false);\n\n\t\n\tconst [email, setEmail] = useState(\"\");\n\tconst [emailError, setEmailError] = useState(\"\");\n\tconst [password, setPassword] = useState(\"\");\n\tconst [passwError, setPasswError] = useState(\"\");\n\n\n\tconst [balance, setBalance] = useState(0.0);\n\tconst [depositAmount, setDepositAmount] = useState(\"\");\n\tconst [depositError, setDepositError] = useState(\"\");\n\tconst [depositSuccessMessageVisible, setDepositSuccessMessageVisible] = useState(false); \n\n\tconst [withdrawAmount, setWithdrawAmount] = useState(\"\");\n\tconst [withdrawError, setWithdrawError] = useState(\"\");\n\tconst [withdrawSuccessMessageVisible, setWithdrawSuccessMessageVisible] = useState(false); \n\n\tconst [transferAmount, setTransferAmount] = useState(\"\");\n\tconst [transferError, setTransferError] = useState(\"\");\n\tconst [transferSuccessMessageVisible, setTransferSuccessMessageVisible] = useState(false);\n\n\tconst [investAmount, setInvestAmount] = useState(\"\");\n\tconst [investError, setInvestError] = useState(\"\");\n\tconst [investSuccessMessageVisible, setInvestSuccessMessageVisible] = useState(false);\n\tconst [investResult, setInvestResult] = useState(false);\n\n\tconst [error, setError] = useState(\"\");\n\tconst [result, setResult] = useState(\"\");\n\tconst [dateTime, setDateTime] = useState(\"\");\n\n\n\tlet firstNameErrorStr = \"\";\n\tlet lastNameErrorStr = \"\";\n\tlet userNameErrorStr = \"\";\n\tlet emailErrorStr = \"\";\n\tlet passwordErrorStr = \"\";\n\tlet depositErrorStr = \"\";\n\tlet withdrawErrorStr = \"\";\n\tlet transferErrorStr = \"\";\n\tlet investErrorStr = \"\";\n\n\n\t//INPUT VALIDATION WITH ERROR MESSAGES: NO INPUT + ADDITIONAL \n\tconst validate = () => {\n\t\tsetUserNameError(\"\");\n\t\tsetFirstNameError(\"\");\n\t\tsetLastNameError(\"\");\n\t\tsetEmailError(\"\");\n\t\tsetPasswError(\"\");\n\n\t\t//username\n\t\tif (!userName) {\n\t\t\tuserNameErrorStr = \"Oops! Your username can't be blank.\";\n\t\t\t//additional: length \n\t\t} else  if (userName.length == 1) {\n\t\t\tuserNameErrorStr = \"Username must be longer than that.\";\n\t\t} else if (userName.length > 10) {\n\t\t\tuserNameErrorStr = \"Username must not exceed 10 characters.\";\n\t\t}\n\n\t\t//firstName\n\t\tif (!firstName) {\n\t\t\tfirstNameErrorStr = \"Oops! Your first name can't be blank.\";\n\t\t\t//additional: name length \n\t\t} else  if (firstName.length == 1) {\n\t\t\t\tfirstNameErrorStr = \"First name must be longer than that.\";\n\t\t} \n\n\t\t//lastName\n\t\tif (!lastName) {\n\t\t\tlastNameErrorStr = \"Oops! Your last name can't be blank.\";\n\t\t\t//additional: name length \n\t\t} else  if (lastName.length < 2) {\n\t\t\tlastNameErrorStr = \"Last name must be longer than that.\";\n\t\t} \n\n\t\t//email\n\t\tif (!email) {\n\t\t\t\temailErrorStr = \"Oops! Your email can't be blank.\";\n\t\t\t\t//additional: email length \n\t\t} else if (email.length == 1) {\n\t\t\t\temailErrorStr = \"Email must be longer than that.\";\n\t\t}\n\n\t\t//password\n\t\tif (!password) {\n\t\t\t\tpasswordErrorStr = \"Oops! Your password can't be blank.\";\n\t\t}\n\n\t\t//if there's no error message, validate \n\t\t//userName\n\t\tif (userNameErrorStr == \"\") {\n\t\t\t// alert(\"username\")\n\t\t\tvalidateUserName(userName);\n\t\t}\n\t\t//firstName\n\t\tif (firstNameErrorStr == \"\") {\n\t\t\t\tvalidateFirstName(firstName);\n\t\t}\n\n\t\t//lastName\n\t\tif (lastNameErrorStr == \"\") {\n\t\t\tvalidateLastName(lastName);\n\t\t}\n\n\t\t//email\n\t\tif (emailErrorStr == \"\") {\n\t\t\tvalidateEmail(email);\n\t\t}\n\t\t\n\t\t//password\n\t\tif (passwordErrorStr == \"\") {\n\t\t\t\tvalidatePassword(password);\n\t\t}\n\n\t\tsetUserNameError(userNameErrorStr);\n\t\tsetFirstNameError(firstNameErrorStr);\n\t\tsetLastNameError(lastNameErrorStr);\n\t\tsetEmailError(emailErrorStr);\n\t\tsetPasswError(passwordErrorStr);\n\t\treturn userNameErrorStr === \"\" && firstNameErrorStr === \"\" && lastNameErrorStr === \"\" && emailErrorStr === \"\" && passwordErrorStr === \"\"; //returns true and validate() is executed\n\t}; \n\n\t//----------------NAME AND USERNAME VALIDATION-----------------------\n\n\tconst validateFirstName = newFirstName => {\n\tsetFirstNameError(\"\");\n\t//additonal: limiting input to the letters of the English alphabet, including capital letters\n\t\tif(!newFirstName.match(/^[a-zA-Z][a-zA-Z\\s]*$/)) {\n\t\t//this ok?\n\t\t\tfirstNameErrorStr = \"Enter letters only\";\n\t\t\tsetFirstNameError(firstNameErrorStr);\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t};\n\n\tconst validateLastName = newLastName => {\n\t\tsetLastNameError(\"\");\n\t\t//additonal: limiting input to a mix of letters and numbers\n\t\tif(!newLastName.match( /^[a-zA-Z][a-zA-Z\\s]*$/)) {\n\t\t\tlastNameErrorStr = \"Enter letters only\";\n\t\t\tsetLastNameError(lastNameErrorStr);\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t};\n\n\tconst validateUserName = newUserName => {\n\t\tsetUserNameError(\"\");\n\t\t//additonal: limiting input to only Alphabets, Numbers and Underscore and between 3 to 10 characters\n\t\tif(!newUserName.match(/^[a-zA-Z0-9_]{4,10}$/)) {\n\t\t\tuserNameErrorStr = \"Only letters, numbers and underscore, and between 3-10 characters in username.\";\n\t\t\tsetUserNameError(userNameErrorStr);\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t};\n\n\n\n\t//----------------EMAIL VALIDATION-----------------------\n\t\t//additional: email formatting\n\t\tconst validateEmail = newEmail => {\n\t\t\tlet emailFormat = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,4}$/; \n\t\t\tlet isValidFormat = str => {\n\t\t\t\treturn str.match(emailFormat);\n\t\t\t}\n\n\t\t\tif (!isValidFormat(newEmail)) {\n\t\t\t\temailErrorStr = \"Oops! Bad email format.\";\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\t\t//----------------PASSWORD VALIDATION-----------------------\n\n\t\tconst validatePassword = newPassword => {\n\t\t\tif (newPassword.length == 1 || newPassword.length < 8) {\n\t\t\t\tpasswordErrorStr = \"Password must be longer than that.\";\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\n\t\t//----------------CREATE ACCOUNT FORM ONCHANGE-----------------------\n\n\n\t\t//this is not used anywhere----------\n\t\tconst handleClick = e => {\n\t\t\tif (validate()) { \n\t\t\t\t//adding all new users, for \"All Data\"\n\t\t\t\tlet newUser = {\n\t\t\t\t\t\t\"userName\": userName,\n\t\t\t\t\t\t\"firstName\": firstName,\n\t\t\t\t\t\t\"lastName\": lastName,\n\t\t\t\t\t\t\"email\": email,\n\t\t\t\t\t\t\"password\": password\n\t\t\t\t};\n\t\t\t\tsetUsers(users => users.concat(newUser));\n\t\t\t\tconsole.log(`these are all of the users: ${users}`)\n\t\t\t} else {\n\t\t\treturn;\n\t\t\t}\n\t\t};\n\t\t//---------------------------------\n\n\n\n// form input onchange + setting state\n\tconst handleFirstNameChange = e => {\n\t\tlet newFirstName = e.currentTarget.value;\n\t\tif (!newFirstName || validateFirstName(newFirstName)) {\n\t\t\tsetFirstName(newFirstName);\n\t\t}\n\t};\n\n\tconst handleLastNameChange = e => {\n\t\tlet newLastName = e.currentTarget.value;\n\t\tif (!newLastName || validateLastName(newLastName)) {\n\t\t\tsetLastName(newLastName);\n\t\t}\n\t};\n\n\tconst handleUserNameChange = e => {\n\t\tsetUserName(e.currentTarget.value);\n\t\t};\n\n\n\t\tconst handleEmailChange = e => {\n\t\t\tsetEmail(e.currentTarget.value);\n\t\t};\n\n\t\tconst handlePasswordChange = e => {        \n\t\t\tsetPassword(e.currentTarget.value);\n\t\t};\n\n\t\tconst handleDestinationUserNameChange = e => {\n\t\t\tsetDestinationUser(e.currentTarget.value);\n\t\t};\n\n\t// Create Account success message\n\tlet showSuccessMessageAccount = () => {\n\t\treturn (\n\t\t\t<div className=\"successMessage\">\n\t\t\t\t\t<h5>Awesome!</h5>\n\t\t\t\t\t<p>Your account was created.</p>\n\t\t\t</div>\n\t\t)\n\t}\n\n\t\n\n\t\t//----------------VALIDATION FOR DEPOSIT, WITHDRAW, TRANSFER, INVEST-----------------------\n\n\t\tconst validateNr = (newValue) => {\n\t\t\t//clear error when there's new input\n\t\t\tsetDepositError(\"\");\n\t\t\tsetWithdrawError(\"\");\n\t\t\tsetTransferError(\"\");\n\t\t\tsetInvestError(\"\");\n\t\t\tsetError(\"\");\n\t\t\tif(!newValue.match(/^([(0-9)]+\\.)*([(0-9)]+)*$/)) { //this regex matches numbers from 0 to 9 and + decimal numbers\n\t\t\t\tdepositErrorStr = \"Enter numbers only.\";\n\t\t\t\twithdrawErrorStr = \"Enter numbers only.\";\n\t\t\t\ttransferErrorStr = \"Enter numbers only.\";\n\t\t\t\tinvestErrorStr = \"Enter numbers only.\";\n\t\t\t\tsetDepositError(depositErrorStr);\n\t\t\t\tsetWithdrawError(withdrawErrorStr);\n\t\t\t\tsetTransferError(transferErrorStr);\n\t\t\t\tsetInvestError(investErrorStr);\n\t\t\t\treturn false; //didn't validate\n\t\t\t} \n\t\t\treturn true; //did validate\n\t\t};\n\n\t\t//----------------DEPOSIT INPUT-----------------------\n\t\tconst depositHandleChange = e => {\n\t\t\te.preventDefault();\n\t\t\tvar newValue = e.target.value;\n\t\t\tif (!validateNr(newValue)) { \n\t\t\t \tnewValue = newValue.slice(0, -1); //when we delete the numbers, it cuts off the last element if that's not a number\n\t\t\t}\n\t\t\tsetDepositAmount(newValue);\n\t\t\tsetDepositSuccessMessageVisible(false);\n\t\t};\n\n\t\t//----------------DEPOSIT VALIDATION-----------------------\n\t\tconst validateDeposit = () => {\n\t\t\tsetDepositError(\"\");\n\t\t\tsetDepositSuccessMessageVisible(false);\n\n\t\t\tif (depositAmount == 0.0) {\n\t\t\t\tdepositErrorStr = \"Amount must be higher than 0.\";\n\t\t\t\tsetDepositError(depositErrorStr);\n\t\t\t\tsetDepositSuccessMessageVisible(false);\n\t\t\t\treturn false;\n\t\t\t} \n\n\t\t\tif (depositAmount.length >= 7) {\n\t\t\t\tdepositErrorStr = \"Amount must be lower than that.\";\n\t\t\t\tsetDepositError(depositErrorStr);\n\t\t\t\tsetDepositSuccessMessageVisible(false);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\t\t//----------------WITHDRAW INPUT-----------------------\n\t\tconst withdrawHandleChange = e => {\n\t\t\te.preventDefault();\n\t\t\tvar newValue = e.target.value;\n\t\t\tif (!validateNr(newValue)) { \n\t\t\t\tnewValue = newValue.slice(0, -1); //when we delete the numbers, it cuts off the last element if that's not a number\n\t\t\t} \n\t\t\tsetWithdrawAmount(newValue)\n\t\t\tsetWithdrawSuccessMessageVisible(false);   \n\t\t};\n\n\t\t//---------------WITHDRAW VALIDATION-------------------\n\t\tconst validateWithdraw = () => {\n\t\t\t\tsetWithdrawError(\"\");\n\t\t\t\tsetWithdrawSuccessMessageVisible(false);\n\n\t\t\t\tif (withdrawAmount == 0.0) {\n\t\t\t\t\twithdrawErrorStr = \"Amount must be higher than 0.\";\n\t\t\t\t\tsetWithdrawError(withdrawErrorStr);\n\t\t\t\t\tsetWithdrawSuccessMessageVisible(false);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif (withdrawAmount.length >= 7) {\n\t\t\t\t\twithdrawErrorStr = \"Amount must be lower than that.\";\n\t\t\t\t\tsetWithdrawError(withdrawErrorStr);\n\t\t\t\t\tsetWithdrawSuccessMessageVisible(false);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\n\t\t\t\tif (withdrawAmount > balance) {\n\t\t\t\t\twithdrawErrorStr = \"Amount higher than the account balance.\";\n\t\t\t\t\tsetWithdrawError(withdrawErrorStr);\n\t\t\t\t\tsetWithdrawSuccessMessageVisible(false);\n\t\t\t\t\treturn false;\n\t\t\t\t} \n\t\t\t\treturn true;\n\t\t\t};\n\n\t\t\t\n\t\t\t//---------------TRANSFER INPUT, VALIDATION-------------------\n\t\t\tconst validateTransfer = () => {\n\t\t\t\tsetTransferError(\"\");\n\t\t\t\tsetTransferSuccessMessageVisible(false);\n\n\t\t\t\tif (transferAmount == 0.0) {\n\t\t\t\t\ttransferErrorStr = \"Amount must be higher than 0.\";\n\t\t\t\t\tsetTransferError(transferErrorStr);\n\t\t\t\t\tsetTransferSuccessMessageVisible(false);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif (transferAmount.length >= 7) {\n\t\t\t\t\ttransferErrorStr = \"Amount must be lower than that.\";\n\t\t\t\t\tsetTransferError(transferErrorStr);\n\t\t\t\t\tsetTransferSuccessMessageVisible(false);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\n\t\t\t\tif (transferAmount > balance) {\n\t\t\t\t\ttransferErrorStr = \"Amount higher than the account balance.\";\n\t\t\t\t\tsetTransferError(transferErrorStr);\n\t\t\t\t\tsetTransferSuccessMessageVisible(false);\n\t\t\t\t\treturn false;\n\t\t\t\t} \n\t\t\t\treturn true;\n\t\t\t};\n\n\t\t\t//INPUT\n\t\t\tconst transferHandleChange = e => {\n\t\t\t\te.preventDefault();\n\t\t\t\tvar newValue = e.target.value;\n\t\t\t\tif (!validateNr(newValue)) { \n\t\t\t\t\t newValue = newValue.slice(0, -1); //when we delete the numbers, it cuts off the last element if that's not a number\n\t\t\t\t}\n\t\t\t\tsetTransferAmount(newValue);\n\t\t\t\tsetTransferSuccessMessageVisible(false);\n\t\t\t};\n\n\n\t\t\t //---------------INVEST INPUT, VALIDATION-------------------\n\n\t\t\t const validateInvest = () => {\n\t\t\t\t\tsetInvestError(\"\");\n\t\t\t\t\t// setInvestSuccessMessageVisible(false);\n\n\t\t\t\t\tif (investAmount == 0.0) {\n\t\t\t\t\t\tinvestErrorStr = \"Amount must be higher than 0.\";\n\t\t\t\t\t\tsetInvestError(investErrorStr);\n\t\t\t\t\t\t// setInvestSuccessMessageVisible(false);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (investAmount.length >= 7) {\n\t\t\t\t\t\tinvestErrorStr = \"Amount must be lower than that.\";\n\t\t\t\t\t\tsetInvestError(investErrorStr);\n\t\t\t\t\t\t// setInvestSuccessMessageVisible(false);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\tif (transferAmount > balance) {\n\t\t\t\t\t\ttransferErrorStr = \"Amount higher than the account balance.\";\n\t\t\t\t\t\tsetInvestError(investErrorStr);\n\t\t\t\t\t\t// setInvestSuccessMessageVisible(false);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} \n\t\t\t\t\treturn true;\n\t\t\t\t};\n\n\t\t\t//INPUT\n\t\t\tconst investHandleChange = e => {\n\t\t\t\te.preventDefault();\n\t\t\t\tvar newValue = e.target.value;\n\t\t\t\tif (!validateNr(newValue)) { \n\t\t\t\t\t newValue = newValue.slice(0, -1); \n\t\t\t\t}\n\t\t\t\tsetInvestAmount(newValue);\n\t\t\t\t// setInvestSuccessMessageVisible(false);\n\t\t\t};\n\n\n\t\t\t//----------------CLEAR FORMS-----------------------\n\n\t\tconst clearForm = () => {\n\t\t\tsetFirstName(\"\");\n\t\t\tsetLastName(\"\");\n\t\t\tsetUserName(\"\");\n\t\t\tsetEmail(\"\");\n\t\t\tsetPassword(\"\");\n\t\t};\n\n\n\n\n\t\t//---------------DETECTING PAGE RELOAD AND BROWSER TAB CLOSE / PREVENTING BEFOREUNLOAD EVENT-------------------\n\t\t/*\n\t\thttps://dev.to/eons/detect-page-refresh-tab-close-and-route-change-with-react-router-v5-3pd\n\t\t*/\n\n\t\twindow.onbeforeunload = (event) => {\n\t\t\tconst e = event || window.event;\n\t\t\t// Cancel the event\n\t\t\te.preventDefault();\n\t\t\tif (e) {\n\t\t\t\tconsole.log(loggedInUserName)\n\t\t\t\te.returnValue = ''; // Legacy method for cross browser support\n\t\t\t}\n\t\t\treturn ''; // Legacy method for cross browser support\n\t\t};\n\n\t\n\t\t//---------------AUTHENTICATION-------------------\n\t\tasync function authenticateWithAPI() {\n\n\t\t\tconst USER = process.env.REACT_APP_AUTH_USER;\n\t\t\tconst PASSWORD = process.env.REACT_APP_AUTH_PASSWORD;\n\t\t\tconst API_URL = process.env.REACT_APP_NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n\t\t\tconst response = await fetch(`${API_URL}/auth/local`, {\n\t\t\tmethod: \"POST\",\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\"Accept\": \"application/json\",\n\t\t\t\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\t\tidentifier: USER,\n\t\t\t\t\t\t\tpassword: PASSWORD\n\t\t\t\t\t})\n\t\t\t});\n\n\t\t\tif (response.ok) {\n\t\t\t\t\tconst responseObj = await response.json();\n\t\t\t\t\tCookies.set(\"token\", responseObj.jwt);\n\t\t\t} else {\n\t\t\t\t\tconsole.log(response.statusText)\n\t\t\t\t\tsetError(response.statusText);\n\t\t\t}\n\t\t}\n\n\n\n\t\t//------------GET BALANCE FROM DATABASE------------------\n\t\tasync function getBalance() {\n\t\t\tlet userToken = Cookies.get(\"token\");\n\t\t\tif (!userToken) {\n\t\t\t\tauthenticateWithAPI();\n\t\t\t\tuserToken = Cookies.get(\"token\");\n\t\t\t}\n\t\n\t\t\tlet username = Cookies.get(\"username\");;\n\t\t\tif (!username) {\n\t\t\t\tsetError(\"Not logged in!\");\n\t\t\t}\n\n\t\t\tconst API_URL = process.env.REACT_APP_NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n\t\t\tconst balanceResponse = await fetch(`${API_URL}/transactions/balance`, {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: userToken && { Authorization: `Bearer ${userToken}` },\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\"username\" : username\n\t\t\t\t})\n\t\t\t});\n\t\n\t\t\tif (!balanceResponse.ok) {\n\t\t\t\tconsole.log(balanceResponse.statusText)\n\t\t\t\tsetError(balanceResponse.statusText);\n\t\t\t} else {\n\t\t\t\tconst balanceResponseObj = await balanceResponse.json();\n\t\t\t\tconst balanceError = balanceResponseObj.error;\n\t\t\t\tif (!balanceError) {\n\t\t\t\t\tsetBalance(balanceResponseObj.balance);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn balance;\n\t\t};\n\n\n\n\n\t\t//------------EXPORT CONTEXT------------------\n\t\tconst defaultContext = {\n\t\t\t//state:\n\t\t\tfirstName,\n\t\t\tlastName,\n\t\t\tuserName,\n\t\t\temail,\n\t\t\tpassword,\n\t\t\tfirstNameError,\n\t\t\tlastNameError,\n\t\t\tuserNameError,\n\t\t\temailError,\n\t\t\tpasswError,\n\t\t\tdepositAmount,\n\t\t\tbalance,\n\t\t\tdepositError,\n\t\t\twithdrawSuccessMessageVisible,\n\t\t\tdepositSuccessMessageVisible,\n\t\t\twithdrawAmount,\n\t\t\twithdrawError,\n\t\t\tusers,\n\t\t\terror,\n\t\t\tresult,\n\t\t\tloggedInUserName,\n\t\t\tshowLoggedInMsg,\n\t\t\tdateTime,\n\t\t\ttransferAmount,\n\t\t\ttransferError,\n\t\t\ttransferSuccessMessageVisible,\n\t\t\tdestinationUser,\n\t\t\tinvestAmount,\n\t\t\tinvestError,\n\t\t\tinvestSuccessMessageVisible,\n\t\t\tinvestResult,\n\t\t\t//functions:\n\t\t\tvalidate,\n\t\t\thandleClick,\n\t\t\thandleFirstNameChange,\n\t\t\thandleLastNameChange,\n\t\t\thandleUserNameChange,\n\t\t\thandleEmailChange,\n\t\t\thandlePasswordChange,\n\t\t\tvalidateNr,\n\t\t\tdepositHandleChange,\n\t\t\tvalidateDeposit,\n\t\t\twithdrawHandleChange,\n\t\t\tsetDepositSuccessMessageVisible,\n\t\t\tshowSuccessMessageAccount,\n\t\t\tclearForm,\n\t\t\tauthenticateWithAPI,\n\t\t\tsetError,\t\t\t\n\t\t\tsetResult,\n\t\t\tsetLoggedInUserName,\n\t\t\tsetShowLoggedInMsg,\n\t\t\tsetDateTime,\n\t\t\tsetBalance,\n\t\t\tsetDepositAmount,\n\t\t\tvalidateWithdraw,\n\t\t\tsetWithdrawAmount,\n\t\t\tsetWithdrawSuccessMessageVisible,\n\t\t\tgetBalance,\n\t\t\tvalidateTransfer,\n\t\t\tvalidateInvest,\n\t\t\tinvestHandleChange,\n\t\t\ttransferHandleChange,\n\t\t\tsetInvestSuccessMessageVisible,\n\t\t\tsetInvestResult,\n\t\t\tsetInvestAmount,\n\t\t\tsetTransferSuccessMessageVisible,\n\t\t\tsetTransferAmount,\n\t\t\tsetDestinationUser,\n\t\t\thandleDestinationUserNameChange,\n\t\t};\n\n\t\treturn (\n\t\t\t<MyContext.Provider value={defaultContext}>\n\t\t\t\t{children}\n\t\t\t</MyContext.Provider>\n\t\t)\n}\n\nexport {MyContext, MyContextProvider};\n",["161","162"],"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/components/Navbar.js",["163"],[],"import React, { useContext } from \"react\";\r\nimport {useLocation} from \"react-router-dom\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {MyContext} from \"../myContext/MyContext\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport Cookies from \"js-cookie\";\r\nimport Login from \"../pages/Login\";\r\nimport logo from \"../images/logo.png\";\r\n\r\nfunction NavBar() {\r\n\r\n  const {loggedInUserName, setLoggedInUserName} = useContext(MyContext);\r\n\r\n  /* Highlighting: The navigation bar highlights the element of the current page the user is on. */\r\n  /* Highlight the current page the user is on / active page, even on refresh */\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const redirectToLogin = () => {\r\n    history.replace('/#');\r\n  }\r\n\r\n  const logOut = () => {\r\n    Cookies.set(\"username\", \"\");\r\n    setLoggedInUserName(\"\");\r\n    redirectToLogin();\r\n  }\r\n  \r\n  // an array of objects; pages[classIndex] is enough to access it\r\n  const loggedOutPages = [{id:\"login\", text: \"Login\", tooltipText: \"Log in to your account\", href:\"#/\"}];\r\n                          // {id:\"createAccount\", text: \"Open Acount\", tooltipText: \"Open your BetterBank® account\", href:\"#/createAccount\"}];\r\n  \r\n  //preventing user logout when refreshing the page\r\n  const isLoggedIn = (Cookies.get(\"username\") && (Cookies.get(\"username\").length > 0)) || loggedInUserName.length > 0;\r\n  \r\n  const pages = isLoggedIn ? [               \r\n                {id:\"deposit\",text: \"Deposit\", tooltipText: \"Deposit cash & checks on any device\", href:\"#/deposit\"},\r\n                {id:\"withdraw\",text: \"Withdraw\", tooltipText: \"Withdraw cash & checks on any device\", href:\"#/withdraw\"},\r\n                {id:\"transfer\",text: \"Transfer\", tooltipText: \"Transfer cash & checks on any device\", href:\"#/transfer\"},\r\n                {id:\"invest\",text: \"Invest\", tooltipText: \"Invest cash & checks on any device\", href:\"#/invest\"},\r\n                {id:\"allData\",text: \"All Data\", tooltipText: \"All your transactions and more\", href:\"#/allData\"},\r\n                {id:\"logout\", text: \"Log Out\", tooltipText: \"Log out from your account\", href:\"\", onclick:logOut}\r\n  ] : loggedOutPages;\r\n\r\n\r\n  const getClass = (classIndex) => {\r\n    const currentPage = location.pathname; //accessing pathname from the location object\r\n    const renderedPage = pages[classIndex].href.split(\"#\").pop(); //from which we'll get \"withdraw\", \"deposit\", etc.\r\n    return renderedPage === currentPage ? \"current\" : \"\";\r\n  }\r\n\r\n  return (\r\n    <>   \r\n      <div className=\"blurr\">\r\n        <nav className=\"navbar navbar-expand-lg navbar-light\">\r\n          <a href={{Login}} className=\"navbar-brand mt-1 ml-5\">\r\n            <img src={logo} className=\"banklogo\" alt=\"BetterBank\"/>\r\n          </a>\r\n          <div className=\"container\">\r\n            {/* BUTTON */}\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n              {/* hamburger icon */}\r\n              <span className=\"navbar-toggler-icon\"></span> \r\n            </button>\r\n\r\n            {/*  container containing nav items from item 1 till length of page */}\r\n            <div className=\"collapse navbar-collapse nav-container\" id=\"navbarNav\">\r\n\r\n              {/* container containing each nav item only */}\r\n              <ul className=\"navbar-nav navitem-container ml-auto\">\r\n                {pages.map((item, index) => \r\n                  <li key={index} className=\"nav-item\">\r\n                    {(() => {\r\n                      if (item.href.length > 0) {\r\n                        return <a data-tip data-for={item.id} className={`nav-link pl-2 pr-2 mt-2 ml-1 ${getClass(index)}`} href={item.href}>{item.text}</a>\r\n                      } else {\r\n                        return <a data-tip data-for={item.id} className={`nav-link pl-2 pr-2 mt-2 ml-1 ${getClass(index)}`} onClick={item.onclick}>{item.text}</a>\r\n                      }\r\n                    })()}                    \r\n                    <ReactTooltip id={item.id} effect='solid'>\r\n                      <span>{item.tooltipText}</span>\r\n                    </ReactTooltip>\r\n                  </li>\r\n                )}\r\n              </ul>\r\n              {/* end of container for nav items */}\r\n            </div>\r\n            {/* end of main container */}\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NavBar;\r\n\r\n","/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/pages/Login.js",["164"],[],"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/components/Card.js",["165","166"],[],"import React from \"react\";\r\nimport {useContext} from \"react\";\r\nimport {MyContext} from \"../myContext/MyContext\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nfunction Card(props) {\r\n\r\n    function classes() {\r\n      const bg  = props.bgcolor ? ' bg-' + props.bgcolor : \"\";\r\n      const txt = props.txtcolor ? ' text-' + props.txtcolor: \"\";\r\n\r\n      return 'card ' + bg + txt;\r\n    }\r\n    return (\r\n      <div className=\"blurr\"> \r\n        <div className={`cardContainer mb-5 mt-5 pt-2 ${classes()}`}>\r\n\r\n        {(() => {\r\n          let username = Cookies.get(\"username\");;\r\n\t\t\t\t\t\t\tif (username) {\r\n\t\t\t\t\t\t\t\treturn (\r\n                  <>                                                                                                \r\n                    <div className=\"username mt-2\">Welcome back, {username}!</div>\r\n                  </>\r\n\t\t\t\t\t\t\t\t) \r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})()}\r\n     \r\n         \r\n          <div className=\"card-header pt-4\">\r\n            {props.header}\r\n          </div>\r\n\r\n\r\n          <div className=\"card-body\">\r\n            {props.title && (<h5 className=\"card-title mb-4\">{props.title}</h5>)}\r\n            {props.text && (<p className=\"card-text\">{props.text}</p>)}\r\n            {props.body}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );    \r\n  }\r\n\r\n  export default Card;","/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/pages/Deposit.js",[],[],"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/pages/CreateAccount.js",["167","168"],[],"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/pages/AllData.js",["169"],[],"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/pages/Withdraw.js",[],[],"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/pages/Transfer.js",["170"],[],"import React, {useContext, useEffect} from \"react\";\nimport {MyContext} from \"../myContext/MyContext\";\nimport Card from \"../components/Card\";\nimport Cookies from \"js-cookie\";\n\nfunction Transfer() {\n\n\tconst {\n\t\t//state:\n\t\tbalance,\n\t\ttransferAmount,\n\t\ttransferError,\n\t\terror,\n\t\tdestinationUser,\n\t\tloggedInUserName,\n\t\t//functions:\n\t\tvalidateTransfer,\n\t\ttransferSuccessMessageVisible,\n\t\tsetError,\n\t\tauthenticateWithAPI ,\n\t\tsetTransferSuccessMessageVisible,\n\t\tsetTransferAmount,\n\t\tgetBalance,\n\t\tsetDestinationUser,\n\t\ttransferHandleChange,\n\t\thandleDestinationUserNameChange\n\t} = useContext(MyContext);\n\n\tuseEffect(()=> {\n\t\tgetBalance();\n\t}); \n\n\n\tasync function submitTransfer() {\n\t\tif(!validateTransfer()) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet userToken = Cookies.get(\"token\");\n\t\t\tif (!userToken) {\n\t\t\t\tauthenticateWithAPI();\n\t\t\t\tuserToken = Cookies.get(\"token\");\n\t\t\t}\n\n\t\t\tlet username = Cookies.get(\"username\");\n\t\t\tconsole.log(\"to:\" + destinationUser + \"from: \" + username)\n\t\t\t\n\t\t\tconst API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n\t\t\tconst response = await fetch(`${API_URL}/transactions/transfer`, {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: userToken && { Authorization: `Bearer ${userToken}` },\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tto: destinationUser,\n\t\t\t\t\tfrom: username,\n\t\t\t\t\tamount: transferAmount\n\t\t\t\t}),\n\t\t\t});\n\n\t\tsetError(\"\");\n    if (!response.ok) {\n\t\t\tconsole.log(response.statusText)\n\t\t  setError(response.statusText);\n\t\t} else {\n\t\t\tconst responseObj = await response.json();\n\t\t\tconst error = responseObj.error;\n\t\t\tif (error) {\n\t\t\t\tsetError(error);\n        setTransferSuccessMessageVisible(false)\n\t\t\t} else {\n        setTransferSuccessMessageVisible(true);\n      }\n\t\t\tgetBalance();\n\t\t};\n  };\n\n  let clearMsgTransfer = () => {\n    setTransferAmount(\"\");\n\t\tsetDestinationUser(\"\");\n    setTransferSuccessMessageVisible(false);\n  }\n\n\treturn (\n\t\t<Card\n\t\t\t\tbgcolor=\"warning\"\n\t\t\t\theader=\"Transfer\"\n\t\t\t\tbody= {\n\t\t\t\t\t<>  \n\n\t\t\t\t\t\t{(() => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"error\">{error}</div>\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t})()}\n\n\t\t\t\t\t\t\t{(() => {\n\t\t\t\t\t\t\tif (transferError) {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div className=\"error\">{transferError}</div>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})()}\n\n\t\t\t\t\t\t{(() => {\n\t\t\t\t\t\t\tif (transferSuccessMessageVisible === true) {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div className=\"successMessage\">\n\t\t\t\t\t\t\t\t\t\t<h5>Awesome!</h5>\n\t\t\t\t\t\t\t\t\t\t<p>Your transfer went through!</p>\n\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" id=\"submitbutton\" className=\"submitBtn btn btn-light\" onClick={() => clearMsgTransfer()}>Ok</button>             \n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})()}\n\n\t\t\t\t\t\t<h6 className=\"card-text mt-4 mb-5 font-weight-bolder\">Your current balance is: ${balance}</h6>\n\t\t\t\t\t\n\t\t\t\t\t\t{/* amount */}\n\t\t\t\t\t\t<h6 className=\"card-text mt-4 mb-2 font-weight-bolder\">The amount you wish to transfer:</h6>\n\t\t\t\t\t\t{/* added value so that state can change */}\n\t\t\t\t\t\t<input type=\"input\" className=\"form-control\" id=\"transferAmount\" value={transferAmount} onChange={transferHandleChange}/>\n\t\t\t\t\t\t<br/>  \n\t\t\t\t\t\t\n\t\t\t\t\t\t{/* user */}\n\t\t\t\t\t\t<h6 className=\"card-text mt-4 mb-2 font-weight-bolder\">Username the amount goes to:</h6>\n\t\t\t\t\t\t{/* added value so that state can change */}\n\t\t\t\t\t\t<input type=\"input\" className=\"form-control\" id=\"destinationUser\" value={destinationUser} onChange={handleDestinationUserNameChange}/>\n\t\t\t\t\t\t<br/>                                                                              \n\t\t\t\t\t\t<button type=\"submit\" disabled={!transferAmount || !destinationUser} id =\"submitbutton\" className=\"submitBtn btn btn-light\" onClick={() => submitTransfer()}>Transfer</button>            \n\t\t\t\t\t</>\n\t\t\t\t}  \n\t\t/>\n\t)\n}\n\nexport default Transfer;","/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/pages/Invest.js",["171"],[],"import React, {useContext, useEffect, useState} from \"react\";\nimport {MyContext} from \"../myContext/MyContext\";\nimport Card from \"../components/Card\";\nimport Cookies from \"js-cookie\";\nimport gif from \"../images/gif.gif\";\n\nfunction Invest() {\n\n\tconst {\n\t\t//state:\n\t\tbalance,\n\t\terror,\n\t\tinvestError,\n\t\tinvestSuccessMessageVisible,\n\t\tinvestAmount,\n\t\tinvestResult,\n\t\t//functions:\n\t\tvalidateInvest,\n\t\tsetError,\n\t\tauthenticateWithAPI ,\n\t\tgetBalance,\n\t\tinvestHandleChange,\n\t\tsetInvestSuccessMessageVisible,\n\t\tsetInvestAmount,\n\t\tsetInvestResult\n\t} = useContext(MyContext);\n\n\t\n\n\tuseEffect(()=> {\n\t\tgetBalance();\n\t}); \n\t\n\n\tasync function submitInvest() {\n\t\tif(!validateInvest()) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet userToken = Cookies.get(\"token\");\n\t\t\tif (!userToken) {\n\t\t\t\tauthenticateWithAPI();\n\t\t\t\tuserToken = Cookies.get(\"token\");\n\t\t\t}\n\n\t\t\tlet username = Cookies.get(\"username\");\n\t\t\t\n\t\t\tconst API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n\t\t\tconst response = await fetch(`${API_URL}/transactions/invest`, {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: userToken && { Authorization: `Bearer ${userToken}` },\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tto: username,\n\t\t\t\t\tfrom: username,\n\t\t\t\t\tamount: investAmount\n\t\t\t\t}),\n\t\t\t});\n\n\n\t\tsetError(\"\");\n    if (!response.ok) {\n\t\t  setError(response.statusText);\n\t\t} else {\n\t\t\tconst responseObj = await response.json();\n\t\t\tconst error = responseObj.error;\n\t\t\tif (error) {\n\t\t\t\tsetError(error);\n\t\t\t} else {\n\t\t\t\tconsole.log(\"invest result: \" + responseObj.result);\n        setInvestResult(responseObj.result === 1);\t\t\t\n\t\t\t\tsetInvestSuccessMessageVisible(true);\n      }\n\t\t\tgetBalance();\n\t\t};\n  };\n\n\n\tfunction investOkBtn() {\n\t\twindow.open(\"https://www.lamborghinistore.com/us/\")\n\t\tsetInvestAmount(\"\");\n  \tsetInvestSuccessMessageVisible(false);\n\t}\n\n\treturn (\n\t\t<Card\n\t\t\t\tbgcolor=\"warning\"\n\t\t\t\theader=\"Invest\"\n\t\t\t\tbody= {\n\t\t\t\t\t<>  \n\t\t\t\t\t\t{(() => {\n\t\t\t\t\t\t\tif (investSuccessMessageVisible === true) {\n\t\t\t\t\t\t\t\tif (investResult) {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<div className=\"successMessage\">\n\t\t\t\t\t\t\t\t\t\t\t<h5>(˵ ͡° ͜ʖ ͡°˵)</h5>\n\t\t\t\t\t\t\t\t\t\t\t<p>Your investment has doubled the added amount!</p>\n\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" id=\"redirectToLambo\" className=\"submitBtn btn btn-light\" onClick={() => investOkBtn()}>Ok</button>             \n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<div className=\"successMessage\">\n\t\t\t\t\t\t\t\t\t\t\t<img src={gif} alt=\"animated gif\" />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n            })()}\n\n\n\t\t\t\t\t\t{(() => {\n              if (investError) {\n                return (\n                  <div className=\"error\">{investError}</div>\n                  );\n              }\n            })()}\n\n\t\t\t\t\t\t{(() => {\n              if (error) {\n                return (\n                  <div className=\"error\">{error}</div>\n                  );\n              }\n            })()}\n\n\t\t\t\t\t\t<h6 className=\"invest-text mt-4 mb-5 font-weight-bolder\" >Your current balance is: ${balance}</h6>\n\t\t\t\t\t\t{/* amount */}\n\t\t\t\t\t\t<h6 className=\"invest-text mt-4 mb-2 font-weight-bolder\">The amount you wish to invest:</h6>\n\t\t\t\t\t\t{/* added value so that state can change */}\n\t\t\t\t\t\t<input type=\"input\" className=\"form-control\" value={investAmount} onChange={investHandleChange}/>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<button type=\"submit\" disabled={!investAmount} className=\"submitBtn btn btn-light\" id=\"submitbutton\" onClick={() => submitInvest()}>Invest</button> \n\t\t\t\t\t</>\n\t\t\t\t}  \n\t\t/>\n\t)\n}\n\nexport default Invest;",{"ruleId":"172","severity":1,"message":"173","line":48,"column":31,"nodeType":"174","messageId":"175","endLine":48,"endColumn":33},{"ruleId":"172","severity":1,"message":"173","line":58,"column":24,"nodeType":"174","messageId":"175","endLine":58,"endColumn":26},{"ruleId":"172","severity":1,"message":"173","line":63,"column":24,"nodeType":"174","messageId":"175","endLine":63,"endColumn":26},{"ruleId":"172","severity":1,"message":"173","line":103,"column":28,"nodeType":"174","messageId":"175","endLine":103,"endColumn":30},{"ruleId":"172","severity":1,"message":"173","line":111,"column":33,"nodeType":"174","messageId":"175","endLine":111,"endColumn":35},{"ruleId":"172","severity":1,"message":"173","line":130,"column":26,"nodeType":"174","messageId":"175","endLine":130,"endColumn":28},{"ruleId":"172","severity":1,"message":"173","line":136,"column":25,"nodeType":"174","messageId":"175","endLine":136,"endColumn":27},{"ruleId":"172","severity":1,"message":"173","line":142,"column":22,"nodeType":"174","messageId":"175","endLine":142,"endColumn":24},{"ruleId":"172","severity":1,"message":"173","line":147,"column":25,"nodeType":"174","messageId":"175","endLine":147,"endColumn":27},{"ruleId":"172","severity":1,"message":"173","line":221,"column":27,"nodeType":"174","messageId":"175","endLine":221,"endColumn":29},{"ruleId":"172","severity":1,"message":"173","line":369,"column":21,"nodeType":"174","messageId":"175","endLine":369,"endColumn":23},{"ruleId":"172","severity":1,"message":"173","line":441,"column":21,"nodeType":"174","messageId":"175","endLine":441,"endColumn":23},{"ruleId":"176","severity":1,"message":"177","line":12,"column":5,"nodeType":"178","messageId":"179","endLine":12,"endColumn":13},{"ruleId":"176","severity":1,"message":"180","line":14,"column":3,"nodeType":"178","messageId":"179","endLine":14,"endColumn":35},{"ruleId":"176","severity":1,"message":"180","line":19,"column":3,"nodeType":"178","messageId":"179","endLine":19,"endColumn":35},{"ruleId":"176","severity":1,"message":"181","line":9,"column":5,"nodeType":"178","messageId":"179","endLine":9,"endColumn":28},{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","replacedBy":"185"},{"ruleId":"172","severity":1,"message":"173","line":75,"column":31,"nodeType":"174","messageId":"175","endLine":75,"endColumn":33},{"ruleId":"172","severity":1,"message":"173","line":85,"column":32,"nodeType":"174","messageId":"175","endLine":85,"endColumn":34},{"ruleId":"172","severity":1,"message":"173","line":101,"column":27,"nodeType":"174","messageId":"175","endLine":101,"endColumn":29},{"ruleId":"172","severity":1,"message":"173","line":112,"column":24,"nodeType":"174","messageId":"175","endLine":112,"endColumn":26},{"ruleId":"172","severity":1,"message":"173","line":117,"column":25,"nodeType":"174","messageId":"175","endLine":117,"endColumn":27},{"ruleId":"172","severity":1,"message":"173","line":122,"column":24,"nodeType":"174","messageId":"175","endLine":122,"endColumn":26},{"ruleId":"172","severity":1,"message":"173","line":127,"column":21,"nodeType":"174","messageId":"175","endLine":127,"endColumn":23},{"ruleId":"172","severity":1,"message":"173","line":132,"column":24,"nodeType":"174","messageId":"175","endLine":132,"endColumn":26},{"ruleId":"172","severity":1,"message":"173","line":200,"column":27,"nodeType":"174","messageId":"175","endLine":200,"endColumn":29},{"ruleId":"172","severity":1,"message":"173","line":315,"column":22,"nodeType":"174","messageId":"175","endLine":315,"endColumn":24},{"ruleId":"172","severity":1,"message":"173","line":347,"column":24,"nodeType":"174","messageId":"175","endLine":347,"endColumn":26},{"ruleId":"172","severity":1,"message":"173","line":376,"column":24,"nodeType":"174","messageId":"175","endLine":376,"endColumn":26},{"ruleId":"172","severity":1,"message":"173","line":417,"column":23,"nodeType":"174","messageId":"175","endLine":417,"endColumn":25},{"ruleId":"182","replacedBy":"186"},{"ruleId":"184","replacedBy":"187"},{"ruleId":"188","severity":1,"message":"189","line":77,"column":32,"nodeType":"190","endLine":77,"endColumn":148},{"ruleId":"176","severity":1,"message":"191","line":1,"column":28,"nodeType":"178","messageId":"179","endLine":1,"endColumn":36},{"ruleId":"176","severity":1,"message":"192","line":2,"column":9,"nodeType":"178","messageId":"179","endLine":2,"endColumn":19},{"ruleId":"176","severity":1,"message":"193","line":3,"column":9,"nodeType":"178","messageId":"179","endLine":3,"endColumn":18},{"ruleId":"176","severity":1,"message":"194","line":42,"column":9,"nodeType":"178","messageId":"179","endLine":42,"endColumn":13},{"ruleId":"176","severity":1,"message":"195","line":42,"column":15,"nodeType":"178","messageId":"179","endLine":42,"endColumn":22},{"ruleId":"196","severity":1,"message":"197","line":18,"column":5,"nodeType":"198","endLine":18,"endColumn":7,"suggestions":"199"},{"ruleId":"176","severity":1,"message":"200","line":15,"column":3,"nodeType":"178","messageId":"179","endLine":15,"endColumn":19},{"ruleId":"176","severity":1,"message":"191","line":1,"column":39,"nodeType":"178","messageId":"179","endLine":1,"endColumn":47},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'userName' is assigned a value but never used.","Identifier","unusedVar","'successfullAccountMessageVisible' is assigned a value but never used.","'showSuccessMessageLogin' is assigned a value but never used.","no-native-reassign",["201"],"no-negated-in-lhs",["202"],["201"],["202"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","'useContext' is defined but never used.","'MyContext' is defined but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAlldata'. Either include it or remove the dependency array.","ArrayExpression",["203"],"'loggedInUserName' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"204","fix":"205"},"Update the dependencies array to be: [getAlldata]",{"range":"206","text":"207"},[390,392],"[getAlldata]"]