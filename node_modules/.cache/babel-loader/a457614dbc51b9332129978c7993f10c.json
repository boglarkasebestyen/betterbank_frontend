{"ast":null,"code":"var _jsxFileName = \"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/pages/Withdraw.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { MyContext } from \"../myContext/MyContext\";\nimport Card from \"../components/Card\";\nimport Cookies from \"js-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Withdraw() {\n  _s();\n\n  const {\n    //state:\n    balance,\n    error,\n    //functions:\n    withdrawAmount,\n    withdrawHandleChange,\n    withdrawError,\n    withdrawSuccessMessageVisible,\n    authenticateWithAPI,\n    setError,\n    validateWithdraw,\n    setWithdrawAmount,\n    setWithdrawSuccessMessageVisible,\n    getBalance\n  } = useContext(MyContext);\n  useEffect(() => {\n    getBalance();\n  });\n  const [withdraw, setWithdraw] = useState({\n    amount: \"\",\n    datetime: \"\"\n  });\n\n  async function submitWithdraw() {\n    if (!validateWithdraw()) {\n      return;\n    }\n\n    ;\n    console.log(`this is boolean of setWithdrawMessageVisible after validateWithdraw: ${withdrawSuccessMessageVisible}`);\n    let userToken = Cookies.get(\"token\");\n\n    if (!userToken) {\n      authenticateWithAPI();\n      userToken = Cookies.get(\"token\");\n    }\n\n    const API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n    const response = await fetch(`${API_URL}/transactions/withdraw`, {\n      method: \"POST\",\n      headers: userToken && {\n        Authorization: `Bearer ${userToken}`\n      },\n      body: JSON.stringify({\n        amount: withdrawAmount\n      })\n    });\n\n    if (!response.ok) {\n      console.log(response.statusText);\n      setError(response.statusText);\n    } else {\n      const responseObj = await response.json();\n      const error = responseObj.error;\n\n      if (error) {\n        setError(error);\n        console.log(`this is boolean of setWithdrawSuccessMessageVisible when error: ${withdrawSuccessMessageVisible}`);\n        setWithdrawSuccessMessageVisible(false);\n        console.log(`this is boolean of setWithdrawSuccessMessageVisible after setting it to false: ${withdrawSuccessMessageVisible}`);\n      } else {\n        setWithdrawSuccessMessageVisible(true);\n        console.log(`this is boolean of setWithdrawMessageVisible when setting it to true: ${withdrawSuccessMessageVisible}`);\n      }\n    }\n\n    ;\n  }\n\n  ;\n\n  let clearMsgWithdraw = () => {\n    setWithdrawAmount(0.0);\n    console.log(`this is boolean of setWithdrawMessageVisible with clearMsgWithdraw before setting it to false: ${withdrawSuccessMessageVisible}`);\n    setWithdrawSuccessMessageVisible(false);\n    console.log(`this is boolean of setWithdrawMessageVisible with clearMsgWithdraw after setting it to false: ${withdrawSuccessMessageVisible}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    bgcolor: \"warning\",\n    header: \"Withdraw\",\n    body: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [(() => {\n        if (error) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this);\n        }\n      })(), (() => {\n        if (withdrawError) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error\",\n            children: withdrawError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this);\n        }\n      })(), (() => {\n        if (withdrawSuccessMessageVisible === true) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"successMessage\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Awesome!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Your withdrawal was succesful.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              id: \"clearWith\",\n              className: \"submitBtn btn btn-light\",\n              onClick: () => clearMsgWithdraw(),\n              children: \"Ok\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this);\n        }\n      })(), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"withdraw-text mt-4 mb-5 font-weight-bolder\",\n        children: [\"Your current balance is: $\", balance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"withdraw-text mt-4 font-weight-bolder\",\n        children: \"The amount you wish to withdraw:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"input\",\n        className: \"form-control\",\n        id: \"email\",\n        value: withdrawAmount,\n        onChange: withdrawHandleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !withdrawAmount,\n        id: \"withdraw\",\n        className: \"submitBtn btn btn-light\",\n        onClick: () => submitWithdraw(),\n        children: \"Withdraw\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Withdraw, \"vfRYcp78+MaeXK7uFR/gy86+Ysg=\");\n\n_c = Withdraw;\nexport default Withdraw;\n\nvar _c;\n\n$RefreshReg$(_c, \"Withdraw\");","map":{"version":3,"sources":["/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/pages/Withdraw.js"],"names":["React","useContext","useState","useEffect","MyContext","Card","Cookies","Withdraw","balance","error","withdrawAmount","withdrawHandleChange","withdrawError","withdrawSuccessMessageVisible","authenticateWithAPI","setError","validateWithdraw","setWithdrawAmount","setWithdrawSuccessMessageVisible","getBalance","withdraw","setWithdraw","amount","datetime","submitWithdraw","console","log","userToken","get","API_URL","process","env","NEXT_PUBLIC_API_URL","response","fetch","method","headers","Authorization","body","JSON","stringify","ok","statusText","responseObj","json","clearMsgWithdraw"],"mappings":"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","sourcesContent":["import React, {useContext, useState, useEffect} from \"react\";\r\nimport {MyContext} from \"../myContext/MyContext\";\r\nimport Card from \"../components/Card\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nfunction Withdraw() {\r\n  const {\r\n    //state:\r\n    balance,\r\n    error,\r\n    //functions:\r\n    withdrawAmount,\r\n    withdrawHandleChange,\r\n    withdrawError,\r\n    withdrawSuccessMessageVisible,\r\n    authenticateWithAPI ,\r\n    setError,\r\n    validateWithdraw,\r\n    setWithdrawAmount,\r\n    setWithdrawSuccessMessageVisible,\r\n    getBalance\r\n  } = useContext(MyContext);\r\n\r\n  useEffect(()=> {\r\n    getBalance();\r\n  }); \r\n\r\n  const [withdraw, setWithdraw] = useState({\r\n    amount: \"\" ,\r\n    datetime: \"\" \r\n\t});\r\n\r\n  async function submitWithdraw() {\r\n    if(!validateWithdraw()) {\r\n      return;\r\n    };\r\n\r\n    console.log(`this is boolean of setWithdrawMessageVisible after validateWithdraw: ${withdrawSuccessMessageVisible}`)\r\n\r\n\r\n    let userToken = Cookies.get(\"token\");\r\n\t\tif (!userToken) {\r\n\t\t\tauthenticateWithAPI();\r\n\t\t\tuserToken = Cookies.get(\"token\");\r\n\t\t}\r\n\r\n    const API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\r\n\t\tconst response = await fetch(`${API_URL}/transactions/withdraw`, {\r\n\t\t  method: \"POST\",\r\n\t\t\theaders: userToken && { Authorization: `Bearer ${userToken}` },\r\n\t\t \tbody: JSON.stringify({\r\n        amount: withdrawAmount\r\n\t\t  }),\r\n\t\t});\r\n\r\n    if (!response.ok) {\r\n\t\t\tconsole.log(response.statusText)\r\n\t\t  setError(response.statusText);\r\n\t\t} else {\r\n\t\t\tconst responseObj = await response.json();\r\n\t\t\tconst error = responseObj.error;\r\n\t\t\tif (error) {\r\n\t\t\t\tsetError(error);\r\n        console.log(`this is boolean of setWithdrawSuccessMessageVisible when error: ${withdrawSuccessMessageVisible}`)\r\n        setWithdrawSuccessMessageVisible(false)\r\n        console.log(`this is boolean of setWithdrawSuccessMessageVisible after setting it to false: ${withdrawSuccessMessageVisible}`)\r\n\t\t\t} else {\r\n        setWithdrawSuccessMessageVisible(true);\r\n        console.log(`this is boolean of setWithdrawMessageVisible when setting it to true: ${withdrawSuccessMessageVisible}`)\r\n      }\r\n\t\t};\r\n  };\r\n\r\n  let clearMsgWithdraw = () => {\r\n    setWithdrawAmount(0.0);\r\n    console.log(`this is boolean of setWithdrawMessageVisible with clearMsgWithdraw before setting it to false: ${withdrawSuccessMessageVisible}`)\r\n    setWithdrawSuccessMessageVisible(false);\r\n    console.log(`this is boolean of setWithdrawMessageVisible with clearMsgWithdraw after setting it to false: ${withdrawSuccessMessageVisible}`)\r\n  }\r\n\r\n  return (\r\n    <Card\r\n\t\t\tbgcolor=\"warning\"\r\n\t\t\theader=\"Withdraw\"\r\n\t\t\tbody={\r\n\t\t\t\t<>  \r\n          {(() => {\r\n            if (error) {\r\n              return (\r\n                <div className=\"error\">{error}</div>\r\n                );\r\n            }\r\n          })()}\r\n          \r\n          {(() => {\r\n            if (withdrawError) {\r\n              return (\r\n                <div className=\"error\">{withdrawError}</div>\r\n                );\r\n            }\r\n          })()}\r\n\r\n          {(() => {\r\n            if (withdrawSuccessMessageVisible === true) {\r\n              return (\r\n                <div className=\"successMessage\">\r\n                  <h5>Awesome!</h5>\r\n                  <p>Your withdrawal was succesful.</p>\r\n                  {/* show OK button */}\r\n                  <button type=\"submit\" id=\"clearWith\" className=\"submitBtn btn btn-light\" onClick={() => clearMsgWithdraw()}>Ok</button>             \r\n                </div>\r\n\t\t\t\t\t    );\r\n\t\t\t      } \r\n\t\t\t\t\t\t})()}\r\n\t\t\t\t\t<h6 className=\"withdraw-text mt-4 mb-5 font-weight-bolder\">Your current balance is: ${balance}</h6>\r\n\t\t\t\t\t<h6 className=\"withdraw-text mt-4 font-weight-bolder\">The amount you wish to withdraw:</h6>\r\n\t\t\t\t\t<input type=\"input\" className=\"form-control\" id=\"email\" value={withdrawAmount} onChange={withdrawHandleChange}/>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<button type=\"submit\" disabled={!withdrawAmount} id=\"withdraw\" className=\"submitBtn btn btn-light\" onClick={() => submitWithdraw()}>Withdraw</button>\r\n\t\t\t\t</>\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default Withdraw;\r\n"]},"metadata":{},"sourceType":"module"}