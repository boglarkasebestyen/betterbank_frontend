{"ast":null,"code":"var _jsxFileName = \"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/pages/Deposit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { MyContext } from \"../myContext/MyContext\";\nimport Card from \"../components/Card\";\nimport Cookies from \"js-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Deposit() {\n  _s();\n\n  const {\n    //state:\n    depositAmount,\n    balance,\n    depositError,\n    error,\n    //functions:\n    depositHandleChange,\n    validateDeposit,\n    depositSuccessMessageVisible,\n    setError,\n    authenticateWithAPI,\n    setBalance,\n    setDepositSuccessMessageVisible,\n    setDepositAmount,\n    getBalance\n  } = useContext(MyContext);\n  useEffect(() => {\n    getBalance();\n  });\n  const [deposit, setDeposit] = useState({\n    amount: \"\",\n    datetime: \"\"\n  });\n\n  async function submitDeposit() {\n    if (!validateDeposit()) {\n      return;\n    }\n\n    let userToken = Cookies.get(\"token\");\n\n    if (!userToken) {\n      authenticateWithAPI();\n      userToken = Cookies.get(\"token\");\n    }\n\n    const API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n    const response = await fetch(`${API_URL}/transactions/deposit`, {\n      method: \"POST\",\n      headers: userToken && {\n        Authorization: `Bearer ${userToken}`\n      },\n      body: JSON.stringify({\n        amount: depositAmount\n      })\n    });\n\n    if (!response.ok) {\n      console.log(response.statusText);\n      setError(response.statusText);\n    } else {\n      const responseObj = await response.json();\n      const error = responseObj.error;\n\n      if (error) {\n        setError(error);\n        console.log(`this is boolean of setdepositSuccessMessageVisible before error should be false: ${depositSuccessMessageVisible}`);\n        setDepositSuccessMessageVisible(false);\n        console.log(`this is boolean of setdepositSuccessMessageVisible after error set to false: ${depositSuccessMessageVisible}`);\n      } else {\n        setDepositSuccessMessageVisible(true);\n        console.log(`this is boolean of setdepositSuccessMessageVisible when set to true: ${depositSuccessMessageVisible}`);\n      }\n    }\n\n    ;\n  }\n\n  ;\n\n  let clearMsgDeposit = () => {\n    setDepositAmount(0.0);\n    console.log(`this is boolean of setdepositSuccessMessageVisible in clearMsgDep before setting it to false: ${depositSuccessMessageVisible}`);\n    setDepositSuccessMessageVisible(false);\n    console.log(`this is boolean of setdepositSuccessMessageVisible in clearMsgDep after setting it to true: ${depositSuccessMessageVisible}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    bgcolor: \"warning\",\n    header: \"Deposit\",\n    body: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [(() => {\n        if (error) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 10\n          }, this);\n        }\n      })(), (() => {\n        if (depositError) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error\",\n            children: depositError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 19\n          }, this);\n        }\n      })(), (() => {\n        if (depositSuccessMessageVisible === true) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"successMessage\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Awesome!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Your deposit was received!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              id: \"clearDep\",\n              className: \"submitBtn btn btn-light\",\n              onClick: () => clearMsgDeposit(),\n              children: \"Ok\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 19\n          }, this);\n        }\n      })(), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"deposit-text mt-4 mb-5 font-weight-bolder\",\n        children: [\"Your current balance is: $\", balance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"deposit-text mt-4 font-weight-bolder\",\n        children: \"The amount you wish to deposit:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"input\",\n        className: \"form-control\",\n        id: \"depositAmount\",\n        value: depositAmount,\n        onChange: depositHandleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !depositAmount,\n        id: \"deposit\",\n        className: \"submitBtn btn btn-light\",\n        onClick: () => submitDeposit(),\n        children: \"Deposit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Deposit, \"P2/p2fOnGb33xYhfUcXBJO44B9Q=\");\n\n_c = Deposit;\nexport default Deposit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Deposit\");","map":{"version":3,"sources":["/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/pages/Deposit.js"],"names":["React","useContext","useState","useEffect","MyContext","Card","Cookies","Deposit","depositAmount","balance","depositError","error","depositHandleChange","validateDeposit","depositSuccessMessageVisible","setError","authenticateWithAPI","setBalance","setDepositSuccessMessageVisible","setDepositAmount","getBalance","deposit","setDeposit","amount","datetime","submitDeposit","userToken","get","API_URL","process","env","NEXT_PUBLIC_API_URL","response","fetch","method","headers","Authorization","body","JSON","stringify","ok","console","log","statusText","responseObj","json","clearMsgDeposit"],"mappings":"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","sourcesContent":["import React, {useContext, useState, useEffect} from \"react\";\r\nimport {MyContext} from \"../myContext/MyContext\";\r\nimport Card from \"../components/Card\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nfunction Deposit() {\r\n\r\n  const {\r\n    //state:\r\n    depositAmount,\r\n    balance,\r\n    depositError,\r\n    error,\r\n    //functions:\r\n    depositHandleChange,\r\n    validateDeposit,\r\n    depositSuccessMessageVisible,\r\n    setError,\r\n    authenticateWithAPI ,\r\n    setBalance,\r\n    setDepositSuccessMessageVisible,\r\n    setDepositAmount,\r\n    getBalance\r\n  } = useContext(MyContext);\r\n\r\n  useEffect(()=> {\r\n    getBalance();\r\n  }); \r\n\r\n\tconst [deposit, setDeposit] = useState({\r\n    amount: \"\" ,\r\n    datetime: \"\" \r\n\t});\r\n\r\n  async function submitDeposit() {\r\n    if(!validateDeposit()) {\r\n      return;\r\n    }\r\n\t\r\n\t\tlet userToken = Cookies.get(\"token\");\r\n\t\tif (!userToken) {\r\n\t\t\tauthenticateWithAPI();\r\n\t\t\tuserToken = Cookies.get(\"token\");\r\n\t\t}\r\n\t\t\r\n\t\tconst API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\r\n\t\tconst response = await fetch(`${API_URL}/transactions/deposit`, {\r\n\t\t  method: \"POST\",\r\n\t\t\theaders: userToken && { Authorization: `Bearer ${userToken}` },\r\n\t\t \tbody: JSON.stringify({\r\n        amount: depositAmount\r\n\t\t  }),\r\n\t\t});\r\n\r\n    if (!response.ok) {\r\n\t\t\tconsole.log(response.statusText)\r\n\t\t  setError(response.statusText);\r\n\t\t} else {\r\n\t\t\tconst responseObj = await response.json();\r\n\t\t\tconst error = responseObj.error;\r\n\t\t\tif (error) {\r\n\t\t\t\tsetError(error);\r\n        console.log(`this is boolean of setdepositSuccessMessageVisible before error should be false: ${depositSuccessMessageVisible}`)\r\n        setDepositSuccessMessageVisible(false)\r\n        console.log(`this is boolean of setdepositSuccessMessageVisible after error set to false: ${depositSuccessMessageVisible}`)\r\n\t\t\t} else {\r\n        setDepositSuccessMessageVisible(true);\r\n        console.log(`this is boolean of setdepositSuccessMessageVisible when set to true: ${depositSuccessMessageVisible}`)\r\n      }\r\n\t\t};\r\n  };\r\n\r\n\r\n    let clearMsgDeposit = () => {\r\n      setDepositAmount(0.0);\r\n      console.log(`this is boolean of setdepositSuccessMessageVisible in clearMsgDep before setting it to false: ${depositSuccessMessageVisible}`)\r\n      setDepositSuccessMessageVisible(false);\r\n      console.log(`this is boolean of setdepositSuccessMessageVisible in clearMsgDep after setting it to true: ${depositSuccessMessageVisible}`)\r\n\r\n    }\r\n\r\n  return (\r\n    <Card\r\n        bgcolor=\"warning\"\r\n        header=\"Deposit\"\r\n        body= {\r\n          <>  \r\n\r\n            {(() => {\r\n\t\t\t\t\t\t\tif (error) {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<div className=\"error\">{error}</div>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t\t})()}\r\n\r\n          \t{(() => {\r\n              if (depositError) {\r\n                return (\r\n                  <div className=\"error\">{depositError}</div>\r\n                  );\r\n              }\r\n            })()}\r\n\r\n            {(() => {\r\n\t\t\t\t\t\t\tif (depositSuccessMessageVisible === true) {\r\n\t\t\t\t\t\t\t\treturn (\r\n                  <div className=\"successMessage\">\r\n                    <h5>Awesome!</h5>\r\n                    <p>Your deposit was received!</p>\r\n                    <button type=\"submit\" id=\"clearDep\" className=\"submitBtn btn btn-light\" onClick={() => clearMsgDeposit()}>Ok</button>             \r\n                  </div>\r\n\t\t\t\t        );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})()}\r\n\r\n          \t<h6 className=\"deposit-text mt-4 mb-5 font-weight-bolder\">Your current balance is: ${balance}</h6>\r\n\t\t\t\t\t\t<h6 className=\"deposit-text mt-4 font-weight-bolder\">The amount you wish to deposit:</h6>\r\n\t\t\t\t\t\t<input type=\"input\" className=\"form-control\" id=\"depositAmount\" value={depositAmount} onChange={depositHandleChange}/>\r\n\t\t\t\t\t\t<br/>                                                                              \r\n\t\t\t\t\t\t<button type=\"submit\" disabled={!depositAmount} id =\"deposit\" className=\"submitBtn btn btn-light\" onClick={() => submitDeposit()}>Deposit</button>            \r\n          </>\r\n        }  \r\n    />\r\n  )\r\n}\r\n\r\nexport default Deposit;\r\n"]},"metadata":{},"sourceType":"module"}