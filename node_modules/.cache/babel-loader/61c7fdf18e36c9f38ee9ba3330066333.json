{"ast":null,"code":"var _jsxFileName = \"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/pages/AllData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { MyContext } from \"../myContext/MyContext\";\nimport Cookies from \"js-cookie\";\nimport Card from \"../components/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AllData() {\n  _s();\n\n  const [transactions, setTransactions] = useState([]);\n  const {\n    authenticateWithAPI,\n    setError\n  } = useContext(MyContext);\n  useEffect(() => {\n    getAlldata();\n  });\n\n  async function getAlldata() {\n    let userToken = Cookies.get(\"token\");\n\n    if (!userToken) {\n      authenticateWithAPI();\n      userToken = Cookies.get(\"token\");\n    }\n\n    let username = Cookies.get(\"username\");\n\n    if (!username) {\n      return;\n    }\n\n    const API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n    const response = await fetch(`${API_URL}/transactions/alltransactions`, {\n      method: \"POST\",\n      headers: userToken && {\n        Authorization: `Bearer ${userToken}`\n      },\n      body: JSON.stringify({\n        username: username\n      })\n    });\n\n    if (!response.ok) {\n      console.log(response.statusText);\n      setError(response.statusText);\n    } else {\n      const responseObj = await response.json();\n      const error = responseObj.error;\n      const to = responseObj.to;\n      const from = responseObj.from;\n      const amount = responseObj.amount;\n      const createdAt = responseObj.createdAt;\n\n      if (error) {\n        setError(error);\n      }\n    }\n\n    ;\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: transactions.map(toUser => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        bgcolor: \"warning\",\n        header: \"All Data\",\n        body: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alldata\",\n            children: /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [\"To: \", toUser.to]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 10\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this)\n    }, void 0, false))\n  }, void 0, false);\n}\n\n_s(AllData, \"CBEOftWuJxD4OOqBOlFXIIVgNkA=\");\n\n_c = AllData;\n;\nexport default AllData;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllData\");","map":{"version":3,"sources":["/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/pages/AllData.js"],"names":["React","useContext","useState","MyContext","Cookies","Card","AllData","transactions","setTransactions","authenticateWithAPI","setError","useEffect","getAlldata","userToken","get","username","API_URL","process","env","NEXT_PUBLIC_API_URL","response","fetch","method","headers","Authorization","body","JSON","stringify","ok","console","log","statusText","responseObj","json","error","to","from","amount","createdAt","map","toUser"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,SAAQC,SAAR,QAAwB,wBAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;;;AAGA,SAASC,OAAT,GAAmB;AAAA;;AAElB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAM;AACLO,IAAAA,mBADK;AAELC,IAAAA;AAFK,MAGFT,UAAU,CAACE,SAAD,CAHd;AAKAQ,EAAAA,SAAS,CAAC,MAAK;AACdC,IAAAA,UAAU;AACV,GAFQ,CAAT;;AAIA,iBAAeA,UAAf,GAA4B;AAE3B,QAAIC,SAAS,GAAGT,OAAO,CAACU,GAAR,CAAY,OAAZ,CAAhB;;AACA,QAAI,CAACD,SAAL,EAAgB;AACfJ,MAAAA,mBAAmB;AACnBI,MAAAA,SAAS,GAAGT,OAAO,CAACU,GAAR,CAAY,OAAZ,CAAZ;AACA;;AAED,QAAIC,QAAQ,GAAGX,OAAO,CAACU,GAAR,CAAY,UAAZ,CAAf;;AACA,QAAI,CAACC,QAAL,EAAe;AACd;AACA;;AAED,UAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,mBAAZ,IAAmC,uBAAnD;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,OAAQ,+BAAZ,EAA4C;AACvEM,MAAAA,MAAM,EAAE,MAD+D;AAEvEC,MAAAA,OAAO,EAAEV,SAAS,IAAI;AAAEW,QAAAA,aAAa,EAAG,UAASX,SAAU;AAArC,OAFiD;AAGvEY,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACpBZ,QAAAA,QAAQ,EAAEA;AADU,OAAf;AAHiE,KAA5C,CAA5B;;AAQA,QAAI,CAACK,QAAQ,CAACQ,EAAd,EAAkB;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYV,QAAQ,CAACW,UAArB;AACArB,MAAAA,QAAQ,CAACU,QAAQ,CAACW,UAAV,CAAR;AACC,KAHF,MAGQ;AACN,YAAMC,WAAW,GAAG,MAAMZ,QAAQ,CAACa,IAAT,EAA1B;AACA,YAAMC,KAAK,GAAGF,WAAW,CAACE,KAA1B;AACA,YAAMC,EAAE,GAAGH,WAAW,CAACG,EAAvB;AACA,YAAMC,IAAI,GAAGJ,WAAW,CAACI,IAAzB;AACA,YAAMC,MAAM,GAAGL,WAAW,CAACK,MAA3B;AACA,YAAMC,SAAS,GAAGN,WAAW,CAACM,SAA9B;;AACA,UAAIJ,KAAJ,EAAW;AACVxB,QAAAA,QAAQ,CAACwB,KAAD,CAAR;AACA;AACD;;AAAA;AACD;;AAAA;AAED,sBACC;AAAA,cACE3B,YAAY,CAACgC,GAAb,CAAkBC,MAAD,iBACjB;AAAA,6BACC,QAAC,IAAD;AACC,QAAA,OAAO,EAAC,SADT;AAEC,QAAA,MAAM,EAAC,UAFR;AAGC,QAAA,IAAI,eACH;AAAA,iCACC;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,mCACC;AAAA,iCAASA,MAAM,CAACL,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAJF;AAAA;AAAA;AAAA;AAAA;AADD,qBADA;AADF,mBADD;AAmBD;;GAtEQ7B,O;;KAAAA,O;AAsER;AAGD,eAAeA,OAAf","sourcesContent":["import React, {useContext, useState} from 'react';\r\nimport {MyContext} from \"../myContext/MyContext\";\r\nimport Cookies from \"js-cookie\";\r\nimport Card from \"../components/Card\";\r\n\r\n\r\nfunction AllData() {\r\n\r\n\tconst [transactions, setTransactions] = useState([]);\r\n\r\n\tconst {\r\n\t\tauthenticateWithAPI,\r\n\t\tsetError,\r\n\t} = useContext(MyContext);\r\n\r\n\tuseEffect(()=> {\r\n\t\tgetAlldata();\r\n\t}); \r\n\r\n\tasync function getAlldata() {\r\n\r\n\t\tlet userToken = Cookies.get(\"token\");\r\n\t\tif (!userToken) {\r\n\t\t\tauthenticateWithAPI();\r\n\t\t\tuserToken = Cookies.get(\"token\");\r\n\t\t}\r\n\r\n\t\tlet username = Cookies.get(\"username\");\r\n\t\tif (!username) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\r\n\t\tconst response = await fetch(`${API_URL}/transactions/alltransactions`, {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: userToken && { Authorization: `Bearer ${userToken}` },\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tusername: username\r\n\t\t\t}),\r\n\t\t});\r\n\r\n\t\tif (!response.ok) {\r\n\t\t\tconsole.log(response.statusText)\r\n\t\t\tsetError(response.statusText);\r\n\t\t\t} else {\r\n\t\t\t\tconst responseObj = await response.json();\r\n\t\t\t\tconst error = responseObj.error;\r\n\t\t\t\tconst to = responseObj.to;\r\n\t\t\t\tconst from = responseObj.from;\r\n\t\t\t\tconst amount = responseObj.amount;\r\n\t\t\t\tconst createdAt = responseObj.createdAt\r\n\t\t\t\tif (error) {\r\n\t\t\t\t\tsetError(error);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t};\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{transactions.map((toUser) =>\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\tbgcolor=\"warning\"\r\n\t\t\t\t\t\t\theader=\"All Data\"\r\n\t\t\t\t\t\t\tbody={\r\n\t\t\t\t\t\t\t\t<>  \r\n\t\t\t\t\t\t\t\t\t<div className=\"alldata\">\r\n\t\t\t\t\t\t\t\t\t\t<h6>To: {toUser.to}</h6>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t </>\r\n\t\t)\r\n};\r\n\r\n\t\r\nexport default AllData;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}