{"ast":null,"code":"var _jsxFileName = \"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/pages/AllData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { MyContext } from \"../myContext/MyContext\";\nimport Cookies from \"js-cookie\";\nimport Card from \"../components/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AllData() {\n  _s();\n\n  let [transactions, setTransactions] = useState([]);\n  const {\n    authenticateWithAPI,\n    setError\n  } = useContext(MyContext);\n  useEffect(() => {\n    getAlldata();\n  }, []);\n\n  async function getAlldata() {\n    let userToken = Cookies.get(\"token\");\n\n    if (!userToken) {\n      authenticateWithAPI();\n      userToken = Cookies.get(\"token\");\n    }\n\n    let username = Cookies.get(\"username\");\n\n    if (!username) {\n      return;\n    }\n\n    const API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n    const response = await fetch(`${API_URL}/transactions/alltransactions`, {\n      method: \"POST\",\n      headers: userToken && {\n        Authorization: `Bearer ${userToken}`\n      },\n      body: JSON.stringify({\n        username: username\n      })\n    });\n\n    if (!response.ok) {\n      console.log(response.statusText);\n      setError(response.statusText);\n    } else {\n      const responseObj = await response.json();\n      const error = responseObj.error;\n\n      if (error) {\n        setError(error);\n        return;\n      }\n\n      setTransactions(responseObj);\n    }\n\n    ;\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    bgcolor: \"warning\",\n    header: \"All Data\",\n    body: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n            children: transactions.map((transaction, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"alldataTo\",\n                style: {\n                  backgroundColor: \"red\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"table\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"To\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 69,\n                        columnNumber: 14\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 68,\n                      columnNumber: 13\n                    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: transaction.to\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 72,\n                        columnNumber: 14\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 71,\n                      columnNumber: 13\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 12\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 11\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 10\n              }, this);\n            })\n          }, void 0, false), /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: transactions.map((transaction, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"alldataFrom\",\n                style: {\n                  backgroundColor: \"yellow\",\n                  marginLeft: \"5.5em\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"table\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"From\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 88,\n                        columnNumber: 13\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 87,\n                      columnNumber: 12\n                    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: transaction.from\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 91,\n                        columnNumber: 13\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 90,\n                      columnNumber: 12\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 10\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 10\n              }, this);\n            })\n          }, void 0, false)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: transactions.map((transaction, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                backgroundColor: \"green\",\n                marginLeft: \"5.5em\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"alldataAmount\",\n                children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Amount\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 107,\n                      columnNumber: 14\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 13\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: transaction.amount\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 110,\n                      columnNumber: 14\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 13\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 12\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 10\n            }, this);\n          })\n        }, void 0, false)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: transactions.map((transaction, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alldataDate\",\n            style: {\n              backgroundColor: \"pink\",\n              marginLeft: \"5.5em\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 14\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: transaction.createdAt\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 14\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 12\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 11\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 10\n          }, this);\n        })\n      }, void 0, false)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 4\n  }, this);\n}\n\n_s(AllData, \"CBEOftWuJxD4OOqBOlFXIIVgNkA=\");\n\n_c = AllData;\n;\nexport default AllData;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllData\");","map":{"version":3,"sources":["/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/pages/AllData.js"],"names":["React","useContext","useState","useEffect","MyContext","Cookies","Card","AllData","transactions","setTransactions","authenticateWithAPI","setError","getAlldata","userToken","get","username","API_URL","process","env","NEXT_PUBLIC_API_URL","response","fetch","method","headers","Authorization","body","JSON","stringify","ok","console","log","statusText","responseObj","json","error","map","transaction","index","backgroundColor","to","marginLeft","from","amount","createdAt"],"mappings":"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","sourcesContent":["import React, {useContext, useState, useEffect} from 'react';\r\nimport {MyContext} from \"../myContext/MyContext\";\r\nimport Cookies from \"js-cookie\";\r\nimport Card from \"../components/Card\";\r\n\r\n\r\nfunction AllData() {\r\n\r\n\tlet [transactions, setTransactions] = useState([]);\r\n\r\n\tconst {\r\n\t\tauthenticateWithAPI,\r\n\t\tsetError,\r\n\t} = useContext(MyContext);\r\n\r\n\tuseEffect(()=> {\r\n\t\tgetAlldata();\r\n\t}, []); \r\n\r\n\tasync function getAlldata() {\r\n\r\n\t\tlet userToken = Cookies.get(\"token\");\r\n\t\tif (!userToken) {\r\n\t\t\tauthenticateWithAPI();\r\n\t\t\tuserToken = Cookies.get(\"token\");\r\n\t\t}\r\n\r\n\t\tlet username = Cookies.get(\"username\");\r\n\t\tif (!username) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\r\n\t\tconst response = await fetch(`${API_URL}/transactions/alltransactions`, {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: userToken && { Authorization: `Bearer ${userToken}` },\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tusername: username\r\n\t\t\t}),\r\n\t\t});\r\n\r\n\t\tif (!response.ok) {\r\n\t\t\tconsole.log(response.statusText)\r\n\t\t\tsetError(response.statusText);\r\n\t\t\t} else {\r\n\t\t\t\tconst responseObj = await response.json();\r\n\t\t\t\tconst error = responseObj.error;\r\n\t\t\t\tif (error) {\r\n\t\t\t\t\tsetError(error);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tsetTransactions(responseObj);\r\n\t\t\t};\r\n\t\t};\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<Card\r\n\t\t\t\tbgcolor=\"warning\"\r\n\t\t\t\theader=\"All Data\"\r\n\t\t\t\tbody={\r\n\t\t\t\t\t<><><>\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t{transactions.map((transaction, index) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<div key={index} className=\"alldataTo\" style={{backgroundColor:\"red\"}}>\r\n\t\t\t\t\t\t\t\t\t\t<table>\r\n\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<th>To</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{transaction.to}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t{transactions.map((transaction, index) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<div key={index} className=\"alldataFrom\" style={{backgroundColor:\"yellow\", marginLeft:\"5.5em\"}}>\r\n\t\t\t\t\t\t\t\t\t<table>\r\n\t\t\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<th>From</th>\r\n\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{transaction.from}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t</><>\r\n\t\t\t\t\t\t\t{transactions.map((transaction, index) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<div style={{backgroundColor:\"green\", marginLeft:\"5.5em\"}}>\r\n\t\t\t\t\t\t\t\t\t\t<table key={index} className=\"alldataAmount\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Amount</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{transaction.amount}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</></><>\r\n\t\t\t\t\t\t\t{transactions.map((transaction, index) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<div key={index} className=\"alldataDate\" style={{backgroundColor:\"pink\", marginLeft:\"5.5em\"}}>\r\n\t\t\t\t\t\t\t\t\t\t<table>\r\n\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Date</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{transaction.createdAt}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</></>\r\n\r\n\t\t\t\t}\r\n\t\t\t/>\r\n\t\t)\r\n};\r\n\r\n\t\r\nexport default AllData;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}