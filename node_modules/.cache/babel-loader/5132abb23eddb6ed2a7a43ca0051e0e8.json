{"ast":null,"code":"var _jsxFileName = \"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/App.js\";\nimport React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\"; //ApolloClient: creates a new connection to the GraphQL server\n//InMemoryCache: used by the AC to cache responses from the server for us\n//ApolloProvider: used to wrap our entire React app in it, and allows us to make queries\n\nimport { ApolloClient, InMemoryCache, ApolloProvider } from \"@apollo/client\";\nimport './index.css';\nimport Navbar from \"./components//Navbar\";\nimport Login from \"./pages/Login\";\nimport CreateAccount from \"./pages/CreateAccount\";\nimport Deposit from \"./pages/Deposit\";\nimport Withdraw from \"./pages/Withdraw\";\nimport Transfer from \"./pages/Transfer\";\nimport AllData from \"./pages/AllData\"; // generating a new client connection to the GraphQL server\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new ApolloClient({\n  //the entry-point to the GQL server that Strapi is using\n  uri: \"http://localhost:1337/graphql\",\n  //tells Apollo what to use to cache our query responses\n  cache: new InMemoryCache()\n}); // we need to provide this connection to our app:\n// in older versions wrapping the app with ApolloProvider like this might cause issues\n// if it doesn't work, I can include <HashRouter> in the wrap\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(HashRouter, {\n    children: /*#__PURE__*/_jsxDEV(ApolloProvider, {\n      client: client,\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: Login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/CreateAccount\",\n          component: CreateAccount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/Deposit/\",\n          component: Deposit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/Withdraw/\",\n          component: Withdraw\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/Transfer/\",\n          component: Transfer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/AllData/\",\n          component: AllData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/App.js"],"names":["React","HashRouter","Route","ApolloClient","InMemoryCache","ApolloProvider","Navbar","Login","CreateAccount","Deposit","Withdraw","Transfer","AllData","client","uri","cache","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,EAAoBC,KAApB,QAAgC,kBAAhC,C,CAEA;AACA;AACA;;AACA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,cAAtC,QAA4D,gBAA5D;AACA,OAAO,aAAP;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,iBAApB,C,CAEA;;;AACA,MAAMC,MAAM,GAAG,IAAIV,YAAJ,CAAiB;AAC/B;AACAW,EAAAA,GAAG,EAAE,+BAF0B;AAG/B;AACAC,EAAAA,KAAK,EAAE,IAAIX,aAAJ;AAJwB,CAAjB,CAAf,C,CAOA;AACA;AACA;;AACA,SAASY,GAAT,GAAe;AACd,sBACC,QAAC,UAAD;AAAA,2BAIC,QAAC,cAAD;AAAgB,MAAA,MAAM,EAAEH,MAAxB;AAAA,8BACC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACC,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAsB,UAAA,SAAS,EAAEN;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,gBAAZ;AAA6B,UAAA,SAAS,EAAEC;AAAxC;AAAA;AAAA;AAAA;AAAA,gBAFD,eAGC,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,WAAZ;AAAwB,UAAA,SAAS,EAAEC;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAHD,eAIC,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,YAAZ;AAAyB,UAAA,SAAS,EAAEC;AAApC;AAAA;AAAA;AAAA;AAAA,gBAJD,eAKC,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,YAAZ;AAAyB,UAAA,SAAS,EAAEC;AAApC;AAAA;AAAA;AAAA;AAAA,gBALD,eAMC,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,WAAZ;AAAwB,UAAA,SAAS,EAAEC;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAND;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAJD;AAAA;AAAA;AAAA;AAAA,UADD;AAkBA;;KAnBQI,G;AAsBT,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport {HashRouter, Route} from \"react-router-dom\";\n\n//ApolloClient: creates a new connection to the GraphQL server\n//InMemoryCache: used by the AC to cache responses from the server for us\n//ApolloProvider: used to wrap our entire React app in it, and allows us to make queries\nimport { ApolloClient, InMemoryCache, ApolloProvider } from \"@apollo/client\";\nimport './index.css';\n\nimport Navbar from \"./components//Navbar\";\nimport Login from \"./pages/Login\";\nimport CreateAccount from \"./pages/CreateAccount\";\nimport Deposit from \"./pages/Deposit\";\nimport Withdraw from \"./pages/Withdraw\";\nimport Transfer from \"./pages/Transfer\";\nimport AllData from \"./pages/AllData\";\n\n// generating a new client connection to the GraphQL server\nconst client = new ApolloClient({\n\t//the entry-point to the GQL server that Strapi is using\n\turi: \"http://localhost:1337/graphql\",\n\t//tells Apollo what to use to cache our query responses\n\tcache: new InMemoryCache()\n})\n\n// we need to provide this connection to our app:\n// in older versions wrapping the app with ApolloProvider like this might cause issues\n// if it doesn't work, I can include <HashRouter> in the wrap\nfunction App() {\n\treturn (\n\t\t<HashRouter>\n\t\t{/* passing ApolloProvider a prop called \"client\" which gets the \"client\" variable \n\t\tthat we made as a value (the new ApolloClient connection)*/}\n\t\t{/* now we can make GrapQL queries TO our Strapi backend from any of these components*/}\n\t\t\t<ApolloProvider client={client}>\n\t\t\t\t<Navbar/>\n\t\t\t\t<div className=\"container\"> \n\t\t\t\t\t<Route exact path=\"/\" component={Login} />\n\t\t\t\t\t<Route path=\"/CreateAccount\" component={CreateAccount} />\n\t\t\t\t\t<Route path=\"/Deposit/\" component={Deposit} />\n\t\t\t\t\t<Route path=\"/Withdraw/\" component={Withdraw} />\n\t\t\t\t\t<Route path=\"/Transfer/\" component={Transfer} />\n\t\t\t\t\t<Route path=\"/AllData/\" component={AllData} />\n\t\t\t\t</div>\n\t\t\t</ApolloProvider>\n\t\t</HashRouter>\n\t);\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}