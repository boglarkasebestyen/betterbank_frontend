{"ast":null,"code":"var _jsxFileName = \"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/pages/Invest.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from \"react\";\nimport { MyContext } from \"../myContext/MyContext\";\nimport { useHistory } from \"react-router-dom\";\nimport Card from \"../components/Card\";\nimport Cookies from \"js-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Invest() {\n  _s();\n\n  const {\n    //state:\n    balance,\n    transferAmount,\n    transferError,\n    error,\n    destinationUser,\n    loggedInUserName,\n    //functions:\n    validateTransfer,\n    transferSuccessMessageVisible,\n    setError,\n    authenticateWithAPI,\n    setTransferSuccessMessageVisible,\n    setTransferAmount,\n    getBalance,\n    setDestinationUser,\n    transferHandleChange,\n    handleDestinationUserNameChange\n  } = useContext(MyContext);\n  useEffect(() => {\n    getBalance();\n  }); //this isn't what i want but i'll leave it like this for now\n\n  const redirectToLambo = () => {\n    history.replace(\"/https://www.lamborghini.com/en-en/ownershi\");\n  };\n\n  const redirectToSouthPark = () => {\n    history.replace(\"/https://media.giphy.com/media/n6Le07BiptVaxfDmWf/giphy.gif\");\n  };\n\n  async function submitInvest() {\n    if (!validateInvest) {\n      return;\n    }\n\n    let userToken = Cookies.get(\"token\");\n\n    if (!userToken) {\n      authenticateWithAPI();\n      userToken = Cookies.get(\"token\");\n    }\n\n    let username = Cookies.get(\"username\");\n    const API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n    const response = await fetch(`${API_URL}/transactions/transfer`, {\n      method: \"POST\",\n      headers: userToken && {\n        Authorization: `Bearer ${userToken}`\n      },\n      body: JSON.stringify({\n        to: destinationUser,\n        from: username,\n        amount: transferAmount\n      })\n    });\n\n    if (!response.ok) {\n      console.log(response.statusText);\n      setError(response.statusText);\n    } else {\n      const responseObj = await response.json();\n      const error = responseObj.error;\n\n      if (error) {\n        setError(error);\n        setTransferSuccessMessageVisible(false);\n      } else {\n        setTransferSuccessMessageVisible(true);\n      }\n    }\n\n    ;\n  }\n\n  ;\n\n  let clearMsgTransfer = () => {\n    setTransferAmount(0.0);\n    setDestinationUser(\"\");\n    setTransferSuccessMessageVisible(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    bgcolor: \"warning\",\n    header: \"Transfer\",\n    body: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [(() => {\n        if (investSuccessMessageVisible === true) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"successMessage\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Awesome!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Your transfer went through!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              id: \"clearTransfer\",\n              className: \"submitBtn btn btn-light\",\n              onClick: () => clearMsgTransfer(),\n              children: \"Ok\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 10\n          }, this);\n        }\n      })(), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"card-text mt-4 mb-5 font-weight-bolder\",\n        children: [\"Your current balance is: $\", balance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"card-text mt-4 font-weight-bolder\",\n        children: \"The amount you wish to invest:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"input\",\n        className: \"form-control\",\n        id: \"investAmount\",\n        value: investAmount,\n        onChange: investHandleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !investAmount,\n        id: \"transfer\",\n        className: \"submitBtn btn btn-light\",\n        onClick: () => submitInvest(),\n        children: \"Invest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Invest, \"fFzb03mrnG/KmsGF//f3snHJWdk=\");\n\n_c = Invest;\nexport default Transfer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Invest\");","map":{"version":3,"sources":["/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/pages/Invest.js"],"names":["React","useContext","useEffect","MyContext","useHistory","Card","Cookies","Invest","balance","transferAmount","transferError","error","destinationUser","loggedInUserName","validateTransfer","transferSuccessMessageVisible","setError","authenticateWithAPI","setTransferSuccessMessageVisible","setTransferAmount","getBalance","setDestinationUser","transferHandleChange","handleDestinationUserNameChange","redirectToLambo","history","replace","redirectToSouthPark","submitInvest","validateInvest","userToken","get","username","API_URL","process","env","NEXT_PUBLIC_API_URL","response","fetch","method","headers","Authorization","body","JSON","stringify","to","from","amount","ok","console","log","statusText","responseObj","json","clearMsgTransfer","investSuccessMessageVisible","investAmount","investHandleChange","Transfer"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect} from \"react\";\nimport {MyContext} from \"../myContext/MyContext\";\nimport {useHistory} from \"react-router-dom\";\nimport Card from \"../components/Card\";\nimport Cookies from \"js-cookie\";\n\nfunction Invest() {\n\n\tconst {\n\t\t//state:\n\t\tbalance,\n\t\ttransferAmount,\n\t\ttransferError,\n\t\terror,\n\t\tdestinationUser,\n\t\tloggedInUserName,\n\t\t//functions:\n\t\tvalidateTransfer,\n\t\ttransferSuccessMessageVisible,\n\t\tsetError,\n\t\tauthenticateWithAPI ,\n\t\tsetTransferSuccessMessageVisible,\n\t\tsetTransferAmount,\n\t\tgetBalance,\n\t\tsetDestinationUser,\n\t\ttransferHandleChange,\n\t\thandleDestinationUserNameChange\n\t} = useContext(MyContext);\n\n\tuseEffect(()=> {\n\t\tgetBalance();\n\t}); \n\n\t//this isn't what i want but i'll leave it like this for now\n\tconst redirectToLambo = () => {\n    history.replace(\"/https://www.lamborghini.com/en-en/ownershi\");\n  }\n\n\tconst redirectToSouthPark = () => {\n\t\thistory.replace(\"/https://media.giphy.com/media/n6Le07BiptVaxfDmWf/giphy.gif\")\n\t}\n\n\n\n\tasync function submitInvest() {\n\t\tif(!validateInvest) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet userToken = Cookies.get(\"token\");\n\t\t\tif (!userToken) {\n\t\t\t\tauthenticateWithAPI();\n\t\t\t\tuserToken = Cookies.get(\"token\");\n\t\t\t}\n\n\t\t\tlet username = Cookies.get(\"username\");\n\t\t\t\n\t\t\tconst API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n\t\t\tconst response = await fetch(`${API_URL}/transactions/transfer`, {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: userToken && { Authorization: `Bearer ${userToken}` },\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tto: destinationUser,\n\t\t\t\t\tfrom: username,\n\t\t\t\t\tamount: transferAmount\n\t\t\t\t}),\n\t\t\t});\n\n    if (!response.ok) {\n\t\t\tconsole.log(response.statusText)\n\t\t  setError(response.statusText);\n\t\t} else {\n\t\t\tconst responseObj = await response.json();\n\t\t\tconst error = responseObj.error;\n\t\t\tif (error) {\n\t\t\t\tsetError(error);\n        setTransferSuccessMessageVisible(false)\n\t\t\t} else {\n        setTransferSuccessMessageVisible(true);\n      }\n\t\t};\n  };\n\n  let clearMsgTransfer = () => {\n    setTransferAmount(0.0);\n\t\tsetDestinationUser(\"\");\n    setTransferSuccessMessageVisible(false);\n  }\n\n\treturn (\n\t\t<Card\n\t\t\t\tbgcolor=\"warning\"\n\t\t\t\theader=\"Transfer\"\n\t\t\t\tbody= {\n\t\t\t\t\t<>  \n\t\t\t\t\t\t{(() => {\n\t\t\t\t\t\t\tif (investSuccessMessageVisible === true) {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div className=\"successMessage\">\n\t\t\t\t\t\t\t\t\t\t<h5>Awesome!</h5>\n\t\t\t\t\t\t\t\t\t\t<p>Your transfer went through!</p>\n\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" id=\"clearTransfer\" className=\"submitBtn btn btn-light\" onClick={() => clearMsgTransfer()}>Ok</button>             \n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})()}\n\n\t\t\t\t\t\t<h6 className=\"card-text mt-4 mb-5 font-weight-bolder\">Your current balance is: ${balance}</h6>\n\t\t\t\t\t\n\t\t\t\t\t\t{/* amount */}\n\t\t\t\t\t\t<h6 className=\"card-text mt-4 font-weight-bolder\">The amount you wish to invest:</h6>\n\t\t\t\t\t\t{/* added value so that state can change */}\n\t\t\t\t\t\t<input type=\"input\" className=\"form-control\" id=\"investAmount\" value={investAmount} onChange={investHandleChange}/>\n\t\t\t\t\t\t<br/>  \n\t\t\t\t\t\t<button type=\"submit\" disabled={!investAmount} id =\"transfer\" className=\"submitBtn btn btn-light\" onClick={() => submitInvest()}>Invest</button>            \n\t\t\t\t\t</>\n\t\t\t\t}  \n\t\t/>\n\t)\n}\n\nexport default Transfer;"]},"metadata":{},"sourceType":"module"}