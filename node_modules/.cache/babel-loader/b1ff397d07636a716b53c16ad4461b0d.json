{"ast":null,"code":"var _jsxFileName = \"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/myContext/MyContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from \"react\";\nimport Cookies from \"js-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyContext = /*#__PURE__*/createContext();\n\nfunction MyContextProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [firstNameError, setFirstNameError] = useState(\"\");\n  const [lastNameError, setLastNameError] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [userNameError, setUserNameError] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const [loggedInUserName, setLoggedInUserName] = useState(\"\");\n  const [showLoggedInMsg, setShowLoggedInMsg] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwError, setPasswError] = useState(\"\");\n  const [balance, setBalance] = useState(0.0);\n  const [depositAmount, setDepositAmount] = useState(\"\");\n  const [depositError, setDepositError] = useState(\"\");\n  const [depositSuccessMessageVisible, setDepositSuccessMessageVisible] = useState(false);\n  const [withdrawAmount, setWithdrawAmount] = useState(\"\");\n  const [withdrawError, setWithdrawError] = useState(\"\");\n  const [withdrawSuccessMessageVisible, setWithdrawSuccessMessageVisible] = useState(false);\n  const [transferAmount, setTransferAmount] = useState(\"\");\n  const [transferError, setTransferError] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const [dateTime, setDateTime] = useState(\"\");\n  let firstNameErrorStr = \"\";\n  let lastNameErrorStr = \"\";\n  let userNameErrorStr = \"\";\n  let emailErrorStr = \"\";\n  let passwordErrorStr = \"\";\n  let depositErrorStr = \"\";\n  let withdrawErrorStr = \"\"; //INPUT VALIDATION WITH ERROR MESSAGES: NO INPUT + ADDITIONAL \n\n  const validate = () => {\n    setUserNameError(\"\");\n    setFirstNameError(\"\");\n    setLastNameError(\"\");\n    setEmailError(\"\");\n    setPasswError(\"\"); //username\n\n    if (!userName) {\n      userNameErrorStr = \"Oops! Your username can't be blank.\"; //additional: length \n    } else if (userName.length === 1) {\n      userNameErrorStr = \"Username must be longer than that.\";\n    } else if (userName.length > 10) {\n      userNameErrorStr = \"Username must not exceed 10 characters.\";\n    } //firstName\n\n\n    if (!firstName) {\n      firstNameErrorStr = \"Oops! Your first name can't be blank.\"; //additional: name length \n    } else if (firstName.length === 1) {\n      firstNameErrorStr = \"First name must be longer than that.\";\n    } //lastName\n\n\n    if (!lastName) {\n      lastNameErrorStr = \"Oops! Your last name can't be blank.\"; //additional: name length \n    } else if (lastName.length < 2) {\n      lastNameErrorStr = \"Last name must be longer than that.\";\n    } //email\n\n\n    if (!email) {\n      emailErrorStr = \"Oops! Your email can't be blank.\"; //additional: email length \n    } else if (email.length === 1) {\n      emailErrorStr = \"Email must be longer than that.\";\n    } //password\n\n\n    if (!password) {\n      passwordErrorStr = \"Oops! Your password can't be blank.\";\n    } //if there's no error message, validate \n    //userName\n\n\n    if (userNameErrorStr === \"\") {\n      // alert(\"username\")\n      validateUserName(userName);\n    } //firstName\n\n\n    if (firstNameErrorStr === \"\") {\n      // alert(\"first name\")\n      validateFirstName(firstName);\n    } //lastName\n\n\n    if (lastNameErrorStr === \"\") {\n      // alert(\"last name\")\n      validateLastName(lastName);\n    } //email\n\n\n    if (emailErrorStr === \"\") {\n      validateEmail(email);\n    } //password\n\n\n    if (passwordErrorStr === \"\") {\n      validatePassword(password);\n    }\n\n    setUserNameError(userNameErrorStr);\n    setFirstNameError(firstNameErrorStr);\n    setLastNameError(lastNameErrorStr);\n    setEmailError(emailErrorStr);\n    setPasswError(passwordErrorStr);\n    return userNameErrorStr === \"\" && firstNameErrorStr === \"\" && lastNameErrorStr === \"\" && emailErrorStr === \"\" && passwordErrorStr === \"\"; //returns true and validate() is executed\n  }; //----------------NAME AND USERNAME VALIDATION-----------------------\n\n\n  const validateFirstName = newFirstName => {\n    setFirstNameError(\"\"); //additonal: limiting input to the letters of the English alphabet, including capital letters\n\n    if (!newFirstName.match(/^[a-zA-Z][a-zA-Z\\s]*$/)) {\n      //this ok?\n      firstNameErrorStr = \"Enter letters only\";\n      setFirstNameError(firstNameErrorStr);\n      return false;\n    }\n\n    return true;\n  };\n\n  const validateLastName = newLastName => {\n    setLastNameError(\"\"); //additonal: limiting input to a mix of letters and numbers\n\n    if (!newLastName.match(/^[a-zA-Z][a-zA-Z\\s]*$/)) {\n      lastNameErrorStr = \"Enter letters only\";\n      setLastNameError(lastNameErrorStr);\n      return false;\n    }\n\n    return true;\n  };\n\n  const validateUserName = newUserName => {\n    setUserNameError(\"\"); //additonal: limiting input to only Alphabets, Numbers and Underscore and between 3 to 10 characters\n\n    if (!newUserName.match(/^[a-zA-Z0-9_]{4,10}$/)) {\n      userNameErrorStr = \"Only letters, numbers and underscore, and between 3-10 characters in username.\";\n      setUserNameError(userNameErrorStr);\n      return false;\n    }\n\n    return true;\n  }; //----------------EMAIL VALIDATION-----------------------\n  //additional: email formatting\n\n\n  const validateEmail = newEmail => {\n    let emailFormat = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,4}$/;\n\n    let isValidFormat = str => {\n      return str.match(emailFormat);\n    };\n\n    if (!isValidFormat(newEmail)) {\n      emailErrorStr = \"Oops! Bad email format.\";\n      return false;\n    }\n\n    return true;\n  }; //----------------PASSWORD VALIDATION-----------------------\n\n\n  const validatePassword = newPassword => {\n    if (newPassword.length === 1 || newPassword.length < 8) {\n      passwordErrorStr = \"Password must be longer than that.\";\n      return false;\n    }\n\n    return true;\n  }; //----------------CREATE ACCOUNT FORM ONCHANGE-----------------------\n  //this is not used anywhere----------\n\n\n  const handleClick = e => {\n    if (validate()) {\n      //adding all new users, for \"All Data\"\n      let newUser = {\n        \"userName\": userName,\n        \"firstName\": firstName,\n        \"lastName\": lastName,\n        \"email\": email,\n        \"password\": password\n      };\n      setUsers(users => users.concat(newUser));\n      console.log(`these are all of the users: ${users}`);\n    } else {\n      return;\n    }\n  }; //---------------------------------\n  // form input onchange + setting state\n\n\n  const handleFirstNameChange = e => {\n    let newFirstName = e.currentTarget.value;\n\n    if (!newFirstName || validateFirstName(newFirstName)) {\n      setFirstName(newFirstName);\n    }\n  };\n\n  const handleLastNameChange = e => {\n    let newLastName = e.currentTarget.value;\n\n    if (!newLastName || validateLastName(newLastName)) {\n      setLastName(newLastName);\n    }\n  };\n\n  const handleUserNameChange = e => {\n    setUserName(e.currentTarget.value);\n  };\n\n  const handleEmailChange = e => {\n    setEmail(e.currentTarget.value);\n  };\n\n  const handlePasswordChange = e => {\n    setPassword(e.currentTarget.value);\n  }; // Create Account success message\n\n\n  let showSuccessMessageAccount = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"successMessage\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Awesome!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your account was created.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 4\n    }, this);\n  }; //----------------VALIDATION FOR DEPOSIT AND WITHDRAW-----------------------\n\n\n  const validateNr = newValue => {\n    //clear error when there's new input\n    setDepositError(\"\");\n    setWithdrawError(\"\");\n\n    if (!newValue.match(/^([(0-9)]+\\.)*([(0-9)]+)*$/)) {\n      //this regex matches numbers from 0 to 9 and + decimal numbers\n      depositErrorStr = \"Enter numbers only.\"; //this was missing:\n\n      withdrawErrorStr = \"Enter numbers only.\";\n      setDepositError(depositErrorStr); //this was missing:\n\n      setWithdrawError(withdrawErrorStr);\n      return false; //didn't validate\n    }\n\n    return true; //did validate\n  }; //----------------DEPOSIT INPUT-----------------------\n\n\n  const depositHandleChange = e => {\n    e.preventDefault();\n    var newValue = e.target.value;\n\n    if (!validateNr(newValue)) {\n      newValue = newValue.slice(0, -1); //when we delete the numbers, it cuts off the last element if that's not a number\n    }\n\n    setDepositAmount(newValue);\n    setDepositSuccessMessageVisible(false);\n  }; //----------------DEPOSIT VALIDATION-----------------------\n\n\n  const validateDeposit = () => {\n    setDepositError(\"\");\n    setDepositSuccessMessageVisible(false);\n\n    if (depositAmount === 0.0) {\n      depositErrorStr = \"Amount must be higher than 0.\";\n      setDepositError(depositErrorStr);\n      setDepositSuccessMessageVisible(false);\n      return false;\n    }\n\n    return true;\n  }; //----------------WITHDRAW INPUT-----------------------\n\n\n  const withdrawHandleChange = e => {\n    e.preventDefault();\n    var newValue = e.target.value;\n\n    if (!validateNr(newValue)) {\n      newValue = newValue.slice(0, -1); //when we delete the numbers, it cuts off the last element if that's not a number\n    }\n\n    setWithdrawAmount(newValue);\n    setWithdrawSuccessMessageVisible(false);\n  }; //---------------WITHDRAW VALIDATION-------------------\n\n\n  const validateWithdraw = () => {\n    setWithdrawError(\"\");\n    setWithdrawSuccessMessageVisible(false);\n\n    if (withdrawAmount === 0.0) {\n      withdrawErrorStr = \"Amount must be higher than 0.\";\n      setWithdrawError(withdrawErrorStr);\n      setWithdrawSuccessMessageVisible(false);\n      return false;\n    }\n\n    if (withdrawAmount.length >= 7) {\n      withdrawErrorStr = \"Amount must be lower than that.\";\n      setWithdrawError(withdrawErrorStr);\n      setWithdrawSuccessMessageVisible(false);\n      return false;\n    }\n\n    if (withdrawAmount > balance) {\n      withdrawErrorStr = \"Amount higher than the account balance.\";\n      setWithdrawError(withdrawErrorStr);\n      setWithdrawSuccessMessageVisible(false);\n      return false;\n    }\n\n    return true;\n  }; //----------------CLEAR FORMS-----------------------\n\n\n  const clearForm = () => {\n    setFirstName(\"\");\n    setLastName(\"\");\n    setUserName(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  let clearLoginForm = () => {\n    setUserName(\"\");\n    setPassword(\"\");\n  }; //---------------DETECTING PAGE RELOAD AND BROWSER TAB CLOSE / PREVENTING BEFOREUNLOAD EVENT-------------------\n\n  /*\n  https://dev.to/eons/detect-page-refresh-tab-close-and-route-change-with-react-router-v5-3pd\n  */\n\n\n  window.onbeforeunload = event => {\n    const e = event || window.event; // Cancel the event\n\n    e.preventDefault();\n\n    if (e) {\n      console.log(loggedInUserName);\n      e.returnValue = ''; // Legacy method for cross browser support\n    }\n\n    return ''; // Legacy method for cross browser support\n  }; //---------------AUTHENTICATION-------------------\n\n\n  async function authenticateWithAPI() {\n    const API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n    const response = await fetch(`${API_URL}/auth/local`, {\n      method: \"POST\",\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        identifier: \"sebestyenboglarkacsilla@gmail.com\",\n        password: \"SecretPassword666\"\n      })\n    });\n\n    if (response.ok) {\n      const responseObj = await response.json();\n      Cookies.set(\"token\", responseObj.jwt);\n    } else {\n      console.log(response.statusText);\n      setError(response.statusText);\n    }\n  } //------------GET BALANCE FROM DATABASE------------------\n\n\n  async function getBalance() {\n    let userToken = Cookies.get(\"token\");\n\n    if (!userToken) {\n      authenticateWithAPI();\n      userToken = Cookies.get(\"token\");\n    }\n\n    const API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n    const balanceResponse = await fetch(`${API_URL}/transactions/balance`, {\n      method: \"POST\",\n      headers: userToken && {\n        Authorization: `Bearer ${userToken}`\n      },\n      body: {}\n    });\n\n    if (!balanceResponse.ok) {\n      console.log(balanceResponse.statusText);\n      setError(balanceResponse.statusText);\n    } else {\n      const balanceResponseObj = await balanceResponse.json();\n      const balanceError = balanceResponseObj.error;\n\n      if (!balanceError) {\n        setBalance(balanceResponseObj.balance);\n      }\n    }\n\n    return balance;\n  }\n\n  ; //------------EXPORT CONTEXT------------------\n\n  const defaultContext = {\n    //state:\n    firstName,\n    lastName,\n    userName,\n    email,\n    password,\n    firstNameError,\n    lastNameError,\n    userNameError,\n    emailError,\n    passwError,\n    depositAmount,\n    balance,\n    depositError,\n    withdrawSuccessMessageVisible,\n    depositSuccessMessageVisible,\n    withdrawAmount,\n    withdrawError,\n    users,\n    error,\n    result,\n    loggedInUserName,\n    showLoggedInMsg,\n    dateTime,\n    //functions:\n    validate,\n    handleClick,\n    handleFirstNameChange,\n    handleLastNameChange,\n    handleUserNameChange,\n    handleEmailChange,\n    handlePasswordChange,\n    validateNr,\n    depositHandleChange,\n    validateDeposit,\n    withdrawHandleChange,\n    setDepositSuccessMessageVisible,\n    showSuccessMessageAccount,\n    clearForm,\n    authenticateWithAPI,\n    setError,\n    setResult,\n    setLoggedInUserName,\n    clearLoginForm,\n    setShowLoggedInMsg,\n    setDateTime,\n    setBalance,\n    setDepositAmount,\n    validateWithdraw,\n    setWithdrawAmount,\n    setWithdrawSuccessMessageVisible,\n    getBalance\n  };\n  return /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n    value: defaultContext,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 503,\n    columnNumber: 4\n  }, this);\n}\n\n_s(MyContextProvider, \"vVKwzyGm7V4wIOJEaWXNw40hgDE=\");\n\n_c = MyContextProvider;\nexport { MyContext, MyContextProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"MyContextProvider\");","map":{"version":3,"sources":["/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/myContext/MyContext.js"],"names":["React","createContext","useState","Cookies","MyContext","MyContextProvider","children","firstName","setFirstName","lastName","setLastName","firstNameError","setFirstNameError","lastNameError","setLastNameError","userName","setUserName","userNameError","setUserNameError","users","setUsers","loggedInUserName","setLoggedInUserName","showLoggedInMsg","setShowLoggedInMsg","email","setEmail","emailError","setEmailError","password","setPassword","passwError","setPasswError","balance","setBalance","depositAmount","setDepositAmount","depositError","setDepositError","depositSuccessMessageVisible","setDepositSuccessMessageVisible","withdrawAmount","setWithdrawAmount","withdrawError","setWithdrawError","withdrawSuccessMessageVisible","setWithdrawSuccessMessageVisible","transferAmount","setTransferAmount","transferError","setTransferError","error","setError","result","setResult","dateTime","setDateTime","firstNameErrorStr","lastNameErrorStr","userNameErrorStr","emailErrorStr","passwordErrorStr","depositErrorStr","withdrawErrorStr","validate","length","validateUserName","validateFirstName","validateLastName","validateEmail","validatePassword","newFirstName","match","newLastName","newUserName","newEmail","emailFormat","isValidFormat","str","newPassword","handleClick","e","newUser","concat","console","log","handleFirstNameChange","currentTarget","value","handleLastNameChange","handleUserNameChange","handleEmailChange","handlePasswordChange","showSuccessMessageAccount","validateNr","newValue","depositHandleChange","preventDefault","target","slice","validateDeposit","withdrawHandleChange","validateWithdraw","clearForm","clearLoginForm","window","onbeforeunload","event","returnValue","authenticateWithAPI","API_URL","process","env","NEXT_PUBLIC_API_URL","response","fetch","method","headers","body","JSON","stringify","identifier","ok","responseObj","json","set","jwt","statusText","getBalance","userToken","get","balanceResponse","Authorization","balanceResponseObj","balanceError","defaultContext"],"mappings":"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","sourcesContent":["import React, {createContext, useState} from \"react\";\nimport Cookies from \"js-cookie\";\n\nconst MyContext = createContext();\n\n\nfunction MyContextProvider({children}) {\n\n\tconst [firstName, setFirstName] = useState(\"\");\n\tconst [lastName, setLastName] = useState(\"\");\n\tconst [firstNameError, setFirstNameError] = useState(\"\");\n\tconst [lastNameError, setLastNameError] = useState(\"\");\n\n\tconst [userName, setUserName] = useState(\"\");\n\tconst [userNameError, setUserNameError] = useState(\"\");\n\tconst [users, setUsers] = useState([]);\n\n\tconst [loggedInUserName, setLoggedInUserName] = useState(\"\")\n\tconst [showLoggedInMsg, setShowLoggedInMsg] = useState(false);\n\n\t\n\tconst [email, setEmail] = useState(\"\");\n\tconst [emailError, setEmailError] = useState(\"\");\n\tconst [password, setPassword] = useState(\"\");\n\tconst [passwError, setPasswError] = useState(\"\");\n\n\n\tconst [balance, setBalance] = useState(0.0);\n\tconst [depositAmount, setDepositAmount] = useState(\"\");\n\tconst [depositError, setDepositError] = useState(\"\");\n\tconst [depositSuccessMessageVisible, setDepositSuccessMessageVisible] = useState(false); \n\n\tconst [withdrawAmount, setWithdrawAmount] = useState(\"\");\n\tconst [withdrawError, setWithdrawError] = useState(\"\");\n\tconst [withdrawSuccessMessageVisible, setWithdrawSuccessMessageVisible] = useState(false); \n\n\tconst [transferAmount, setTransferAmount] = useState(\"\");\n\tconst [transferError, setTransferError] = useState(\"\");\n\n\n\tconst [error, setError] = useState(\"\");\n\tconst [result, setResult] = useState(\"\");\n\tconst [dateTime, setDateTime] = useState(\"\");\n\n\n\tlet firstNameErrorStr = \"\";\n\tlet lastNameErrorStr = \"\";\n\tlet userNameErrorStr = \"\";\n\tlet emailErrorStr = \"\";\n\tlet passwordErrorStr = \"\";\n\tlet depositErrorStr = \"\";\n\tlet withdrawErrorStr = \"\";\n\n\n\t//INPUT VALIDATION WITH ERROR MESSAGES: NO INPUT + ADDITIONAL \n\tconst validate = () => {\n\t\tsetUserNameError(\"\");\n\t\tsetFirstNameError(\"\");\n\t\tsetLastNameError(\"\");\n\t\tsetEmailError(\"\");\n\t\tsetPasswError(\"\");\n\n\t\t//username\n\t\tif (!userName) {\n\t\t\tuserNameErrorStr = \"Oops! Your username can't be blank.\";\n\t\t\t//additional: length \n\t\t} else  if (userName.length === 1) {\n\t\t\tuserNameErrorStr = \"Username must be longer than that.\";\n\t\t} else if (userName.length > 10) {\n\t\t\tuserNameErrorStr = \"Username must not exceed 10 characters.\";\n\t\t}\n\n\t\t//firstName\n\t\tif (!firstName) {\n\t\t\tfirstNameErrorStr = \"Oops! Your first name can't be blank.\";\n\t\t\t//additional: name length \n\t\t} else  if (firstName.length === 1) {\n\t\t\t\tfirstNameErrorStr = \"First name must be longer than that.\";\n\t\t} \n\n\t\t//lastName\n\t\tif (!lastName) {\n\t\t\tlastNameErrorStr = \"Oops! Your last name can't be blank.\";\n\t\t\t//additional: name length \n\t\t} else  if (lastName.length < 2) {\n\t\t\tlastNameErrorStr = \"Last name must be longer than that.\";\n\t\t} \n\n\t\t//email\n\t\tif (!email) {\n\t\t\t\temailErrorStr = \"Oops! Your email can't be blank.\";\n\t\t\t\t//additional: email length \n\t\t} else if (email.length === 1) {\n\t\t\t\temailErrorStr = \"Email must be longer than that.\";\n\t\t}\n\n\t\t//password\n\t\tif (!password) {\n\t\t\t\tpasswordErrorStr = \"Oops! Your password can't be blank.\";\n\t\t}\n\n\t\t//if there's no error message, validate \n\t\t//userName\n\t\tif (userNameErrorStr === \"\") {\n\t\t\t// alert(\"username\")\n\t\t\tvalidateUserName(userName);\n\t\t}\n\t\t//firstName\n\t\tif (firstNameErrorStr === \"\") {\n\t\t\t\t// alert(\"first name\")\n\t\t\t\tvalidateFirstName(firstName);\n\t\t}\n\n\t\t//lastName\n\t\tif (lastNameErrorStr === \"\") {\n\t\t\t// alert(\"last name\")\n\t\t\tvalidateLastName(lastName);\n\t\t}\n\n\t\t//email\n\t\tif (emailErrorStr === \"\") {\n\t\t\tvalidateEmail(email);\n\t\t}\n\t\t\n\t\t//password\n\t\tif (passwordErrorStr === \"\") {\n\t\t\t\tvalidatePassword(password);\n\t\t}\n\n\t\tsetUserNameError(userNameErrorStr);\n\t\tsetFirstNameError(firstNameErrorStr);\n\t\tsetLastNameError(lastNameErrorStr);\n\t\tsetEmailError(emailErrorStr);\n\t\tsetPasswError(passwordErrorStr);\n\t\treturn userNameErrorStr === \"\" && firstNameErrorStr === \"\" && lastNameErrorStr === \"\" && emailErrorStr === \"\" && passwordErrorStr === \"\"; //returns true and validate() is executed\n\t}; \n\n\t//----------------NAME AND USERNAME VALIDATION-----------------------\n\n\tconst validateFirstName = newFirstName => {\n\tsetFirstNameError(\"\");\n\t//additonal: limiting input to the letters of the English alphabet, including capital letters\n\t\tif(!newFirstName.match(/^[a-zA-Z][a-zA-Z\\s]*$/)) {\n\t\t//this ok?\n\t\t\tfirstNameErrorStr = \"Enter letters only\";\n\t\t\tsetFirstNameError(firstNameErrorStr);\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t};\n\n\tconst validateLastName = newLastName => {\n\t\tsetLastNameError(\"\");\n\t\t//additonal: limiting input to a mix of letters and numbers\n\t\tif(!newLastName.match( /^[a-zA-Z][a-zA-Z\\s]*$/)) {\n\t\t\tlastNameErrorStr = \"Enter letters only\";\n\t\t\tsetLastNameError(lastNameErrorStr);\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t};\n\n\tconst validateUserName = newUserName => {\n\t\tsetUserNameError(\"\");\n\t\t//additonal: limiting input to only Alphabets, Numbers and Underscore and between 3 to 10 characters\n\t\tif(!newUserName.match(/^[a-zA-Z0-9_]{4,10}$/)) {\n\t\t\tuserNameErrorStr = \"Only letters, numbers and underscore, and between 3-10 characters in username.\";\n\t\t\tsetUserNameError(userNameErrorStr);\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t};\n\n\n\n\t//----------------EMAIL VALIDATION-----------------------\n\t\t//additional: email formatting\n\t\tconst validateEmail = newEmail => {\n\t\t\tlet emailFormat = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,4}$/; \n\t\t\tlet isValidFormat = str => {\n\t\t\t\treturn str.match(emailFormat);\n\t\t\t}\n\n\t\t\tif (!isValidFormat(newEmail)) {\n\t\t\t\temailErrorStr = \"Oops! Bad email format.\";\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\t\t//----------------PASSWORD VALIDATION-----------------------\n\n\t\tconst validatePassword = newPassword => {\n\t\t\tif (newPassword.length === 1 || newPassword.length < 8) {\n\t\t\t\tpasswordErrorStr = \"Password must be longer than that.\";\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\n\t\t//----------------CREATE ACCOUNT FORM ONCHANGE-----------------------\n\n\n\t\t//this is not used anywhere----------\n\t\tconst handleClick = e => {\n\t\t\tif (validate()) { \n\t\t\t\t//adding all new users, for \"All Data\"\n\t\t\t\tlet newUser = {\n\t\t\t\t\t\t\"userName\": userName,\n\t\t\t\t\t\t\"firstName\": firstName,\n\t\t\t\t\t\t\"lastName\": lastName,\n\t\t\t\t\t\t\"email\": email,\n\t\t\t\t\t\t\"password\": password\n\t\t\t\t};\n\t\t\t\tsetUsers(users => users.concat(newUser));\n\t\t\t\tconsole.log(`these are all of the users: ${users}`)\n\t\t\t} else {\n\t\t\treturn;\n\t\t\t}\n\t\t};\n\t\t//---------------------------------\n\n\n\n// form input onchange + setting state\n\tconst handleFirstNameChange = e => {\n\t\tlet newFirstName = e.currentTarget.value;\n\t\tif (!newFirstName || validateFirstName(newFirstName)) {\n\t\t\tsetFirstName(newFirstName);\n\t\t}\n\t};\n\n\tconst handleLastNameChange = e => {\n\t\tlet newLastName = e.currentTarget.value;\n\t\tif (!newLastName || validateLastName(newLastName)) {\n\t\t\tsetLastName(newLastName);\n\t\t}\n\t};\n\n\tconst handleUserNameChange = e => {\n\t\tsetUserName(e.currentTarget.value);\n\t\t};\n\n\n\t\tconst handleEmailChange = e => {\n\t\t\tsetEmail(e.currentTarget.value);\n\t\t};\n\n\t\tconst handlePasswordChange = e => {        \n\t\t\tsetPassword(e.currentTarget.value);\n\t\t};\n\n\n\t// Create Account success message\n\tlet showSuccessMessageAccount = () => {\n\t\treturn (\n\t\t\t<div className=\"successMessage\">\n\t\t\t\t\t<h5>Awesome!</h5>\n\t\t\t\t\t<p>Your account was created.</p>\n\t\t\t</div>\n\t\t)\n\t}\n\n\t\n\n\t\t//----------------VALIDATION FOR DEPOSIT AND WITHDRAW-----------------------\n\n\t\tconst validateNr = (newValue) => {\n\t\t\t//clear error when there's new input\n\t\t\tsetDepositError(\"\");\n\t\t\tsetWithdrawError(\"\");\n\t\t\tif(!newValue.match(/^([(0-9)]+\\.)*([(0-9)]+)*$/)) { //this regex matches numbers from 0 to 9 and + decimal numbers\n\t\t\t\tdepositErrorStr = \"Enter numbers only.\";\n\t\t\t\t//this was missing:\n\t\t\t\twithdrawErrorStr = \"Enter numbers only.\";\n\t\t\t\tsetDepositError(depositErrorStr);\n\t\t\t\t//this was missing:\n\t\t\t\tsetWithdrawError(withdrawErrorStr);\n\t\t\t\treturn false; //didn't validate\n\t\t\t} \n\t\t\treturn true; //did validate\n\t\t};\n\n\t\t//----------------DEPOSIT INPUT-----------------------\n\t\tconst depositHandleChange = e => {\n\t\t\te.preventDefault();\n\t\t\tvar newValue = e.target.value;\n\t\t\tif (!validateNr(newValue)) { \n\t\t\t \tnewValue = newValue.slice(0, -1); //when we delete the numbers, it cuts off the last element if that's not a number\n\t\t\t}\n\t\t\tsetDepositAmount(newValue);\n\t\t\tsetDepositSuccessMessageVisible(false);\n\t\t};\n\n\t\t//----------------DEPOSIT VALIDATION-----------------------\n\t\tconst validateDeposit = () => {\n\t\t\tsetDepositError(\"\");\n\t\t\tsetDepositSuccessMessageVisible(false);\n\n\t\t\tif (depositAmount === 0.0) {\n\t\t\t\tdepositErrorStr = \"Amount must be higher than 0.\";\n\t\t\t\tsetDepositError(depositErrorStr);\n\t\t\t\tsetDepositSuccessMessageVisible(false);\n\t\t\t\treturn false;\n\t\t\t} \n\t\t\treturn true;\n\t\t};\n\n\t\t//----------------WITHDRAW INPUT-----------------------\n\t\tconst withdrawHandleChange = e => {\n\t\t\te.preventDefault();\n\t\t\tvar newValue = e.target.value;\n\t\t\tif (!validateNr(newValue)) { \n\t\t\t\tnewValue = newValue.slice(0, -1); //when we delete the numbers, it cuts off the last element if that's not a number\n\t\t\t} \n\t\t\tsetWithdrawAmount(newValue)\n\t\t\tsetWithdrawSuccessMessageVisible(false);   \n\t\t};\n\n\t\t//---------------WITHDRAW VALIDATION-------------------\n\t\tconst validateWithdraw = () => {\n\t\t\t\tsetWithdrawError(\"\");\n\t\t\t\tsetWithdrawSuccessMessageVisible(false);\n\n\t\t\t\tif (withdrawAmount === 0.0) {\n\t\t\t\t\twithdrawErrorStr = \"Amount must be higher than 0.\";\n\t\t\t\t\tsetWithdrawError(withdrawErrorStr);\n\t\t\t\t\tsetWithdrawSuccessMessageVisible(false);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif (withdrawAmount.length >= 7) {\n\t\t\t\t\twithdrawErrorStr = \"Amount must be lower than that.\";\n\t\t\t\t\tsetWithdrawError(withdrawErrorStr);\n\t\t\t\t\tsetWithdrawSuccessMessageVisible(false);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\n\t\t\t\tif (withdrawAmount > balance) {\n\t\t\t\t\twithdrawErrorStr = \"Amount higher than the account balance.\";\n\t\t\t\t\tsetWithdrawError(withdrawErrorStr);\n\t\t\t\t\tsetWithdrawSuccessMessageVisible(false);\n\t\t\t\t\treturn false;\n\t\t\t\t} \n\t\t\t\treturn true;\n\t\t\t};\n\n\n\t\t\t//----------------CLEAR FORMS-----------------------\n\n\t\tconst clearForm = () => {\n\t\t\tsetFirstName(\"\");\n\t\t\tsetLastName(\"\");\n\t\t\tsetUserName(\"\");\n\t\t\tsetEmail(\"\");\n\t\t\tsetPassword(\"\");\n\t\t};\n\n\t\tlet clearLoginForm = () => {\n\t\t\tsetUserName(\"\");\n\t\t\tsetPassword(\"\");\n\t\t}\n\n\n\n\n\n\n\t\t//---------------DETECTING PAGE RELOAD AND BROWSER TAB CLOSE / PREVENTING BEFOREUNLOAD EVENT-------------------\n\t\t/*\n\t\thttps://dev.to/eons/detect-page-refresh-tab-close-and-route-change-with-react-router-v5-3pd\n\t\t*/\n\n\t\twindow.onbeforeunload = (event) => {\n\t\t\tconst e = event || window.event;\n\t\t\t// Cancel the event\n\t\t\te.preventDefault();\n\t\t\tif (e) {\n\t\t\t\tconsole.log(loggedInUserName)\n\t\t\t\te.returnValue = ''; // Legacy method for cross browser support\n\t\t\t}\n\t\t\treturn ''; // Legacy method for cross browser support\n\t\t};\n\n\t\n\t\t//---------------AUTHENTICATION-------------------\n\t\tasync function authenticateWithAPI() {\n\n\t\t\tconst API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n\t\t\tconst response = await fetch(`${API_URL}/auth/local`, {\n\t\t\tmethod: \"POST\",\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\"Accept\": \"application/json\",\n\t\t\t\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\t\tidentifier: \"sebestyenboglarkacsilla@gmail.com\",\n\t\t\t\t\t\t\tpassword: \"SecretPassword666\"\n\t\t\t\t\t})\n\t\t\t});\n\n\t\t\tif (response.ok) {\n\t\t\t\t\tconst responseObj = await response.json();\n\t\t\t\t\tCookies.set(\"token\", responseObj.jwt);\n\t\t\t} else {\n\t\t\t\t\tconsole.log(response.statusText)\n\t\t\t\t\tsetError(response.statusText);\n\t\t\t}\n\t\t}\n\n\n\n\t\t//------------GET BALANCE FROM DATABASE------------------\n\t\tasync function getBalance() {\n\t\t\tlet userToken = Cookies.get(\"token\");\n\t\t\tif (!userToken) {\n\t\t\t\tauthenticateWithAPI();\n\t\t\t\tuserToken = Cookies.get(\"token\");\n\t\t\t}\n\t\n\t\t\tconst API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n\t\t\tconst balanceResponse = await fetch(`${API_URL}/transactions/balance`, {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: userToken && { Authorization: `Bearer ${userToken}` },\n\t\t\t\tbody: {}\n\t\t\t});\n\t\n\t\t\tif (!balanceResponse.ok) {\n\t\t\t\tconsole.log(balanceResponse.statusText)\n\t\t\t\tsetError(balanceResponse.statusText);\n\t\t\t} else {\n\t\t\t\tconst balanceResponseObj = await balanceResponse.json();\n\t\t\t\tconst balanceError = balanceResponseObj.error;\n\t\t\t\tif (!balanceError) {\n\t\t\t\t\tsetBalance(balanceResponseObj.balance);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn balance;\n\t\t};\n\n\n\n\n\t\t//------------EXPORT CONTEXT------------------\n\t\tconst defaultContext = {\n\t\t\t//state:\n\t\t\tfirstName,\n\t\t\tlastName,\n\t\t\tuserName,\n\t\t\temail,\n\t\t\tpassword,\n\t\t\tfirstNameError,\n\t\t\tlastNameError,\n\t\t\tuserNameError,\n\t\t\temailError,\n\t\t\tpasswError,\n\t\t\tdepositAmount,\n\t\t\tbalance,\n\t\t\tdepositError,\n\t\t\twithdrawSuccessMessageVisible,\n\t\t\tdepositSuccessMessageVisible,\n\t\t\twithdrawAmount,\n\t\t\twithdrawError,\n\t\t\tusers,\n\t\t\terror,\n\t\t\tresult,\n\t\t\tloggedInUserName,\n\t\t\tshowLoggedInMsg,\n\t\t\tdateTime,\n\t\t\n\t\t\t//functions:\n\t\t\tvalidate,\n\t\t\thandleClick,\n\t\t\thandleFirstNameChange,\n\t\t\thandleLastNameChange,\n\t\t\thandleUserNameChange,\n\t\t\thandleEmailChange,\n\t\t\thandlePasswordChange,\n\t\t\tvalidateNr,\n\t\t\tdepositHandleChange,\n\t\t\tvalidateDeposit,\n\t\t\twithdrawHandleChange,\n\t\t\tsetDepositSuccessMessageVisible,\n\t\t\tshowSuccessMessageAccount,\n\t\t\tclearForm,\n\t\t\tauthenticateWithAPI,\n\t\t\tsetError,\t\t\t\n\t\t\tsetResult,\n\t\t\tsetLoggedInUserName,\n\t\t\tclearLoginForm,\n\t\t\tsetShowLoggedInMsg,\n\t\t\tsetDateTime,\n\t\t\tsetBalance,\n\t\t\tsetDepositAmount,\n\t\t\tvalidateWithdraw,\n\t\t\tsetWithdrawAmount,\n\t\t\tsetWithdrawSuccessMessageVisible,\n\t\t\tgetBalance\n\t\t};\n\n\t\treturn (\n\t\t\t<MyContext.Provider value={defaultContext}>\n\t\t\t\t{children}\n\t\t\t</MyContext.Provider>\n\t\t)\n}\n\nexport {MyContext, MyContextProvider};\n"]},"metadata":{},"sourceType":"module"}