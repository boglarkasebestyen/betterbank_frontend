{"ast":null,"code":"var _jsxFileName = \"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/pages/Deposit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { MyContext } from \"../myContext/MyContext\";\nimport Card from \"../components/Card\";\nimport Cookies from \"js-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Deposit() {\n  _s();\n\n  const {\n    //state:\n    depositAmount,\n    balance,\n    depositError,\n    userName,\n    error,\n    loggedInUserName,\n    dateTime,\n    //functions:\n    depositHandleChange,\n    validateDeposit,\n    showSuccessMessageDeposit,\n    setError,\n    clearForm,\n    authenticateWithAPI\n  } = useContext(MyContext);\n  const [deposit, setDeposit] = useState({\n    to: \"\",\n    from: \"\",\n    amount: \"\",\n    datetime: \"\"\n  });\n\n  async function depositBackend() {\n    if (!validateDeposit()) {}\n\n    let userToken = Cookies.get(\"token\");\n\n    if (!userToken) {\n      authenticateWithAPI();\n      userToken = Cookies.get(\"token\");\n    }\n\n    console.log(userToken);\n    const API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n    const response = await fetch(`${API_URL}/transactions/deposit`, {\n      method: \"POST\",\n      headers: userToken && {\n        Authorization: `Bearer ${userToken}`\n      },\n      body: JSON.stringify({\n        to: userName,\n        from: loggedInUserName,\n        amount: depositAmount,\n        date: dateTime\n      })\n    });\n\n    if (!response.ok) {\n      console.log(response.statusText);\n      setError(response.statusText);\n    } else {\n      console.log(\"Success\");\n      const responseObj = await response.json();\n      const error = responseObj.error;\n\n      if (error) {\n        setError(error);\n      } else {\n        clearForm();\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    bgcolor: \"warning\",\n    header: \"Deposit\",\n    body: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [(() => {\n        if (error) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 10\n          }, this);\n        }\n      })(), (() => {\n        if (depositError) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error\",\n            children: depositError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 19\n          }, this);\n        }\n      })(), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"deposit-text mt-4 mb-5 font-weight-bolder\",\n        children: [\"Your current balance is: $\", balance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"deposit-text mt-4 font-weight-bolder\",\n        children: \"The amount you wish to deposit:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"input\",\n        className: \"form-control\",\n        id: \"depositAmount\",\n        placeholder: \"Amount\",\n        onChange: depositHandleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !depositAmount,\n        id: \"deposit\",\n        className: \"submitBtn btn btn-light\",\n        onClick: () => depositBackend(),\n        children: \"Deposit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Deposit, \"2+5KlRhnrdUHiuChoryQJ8MydXg=\");\n\n_c = Deposit;\nexport default Deposit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Deposit\");","map":{"version":3,"sources":["/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/pages/Deposit.js"],"names":["React","useContext","useState","MyContext","Card","Cookies","Deposit","depositAmount","balance","depositError","userName","error","loggedInUserName","dateTime","depositHandleChange","validateDeposit","showSuccessMessageDeposit","setError","clearForm","authenticateWithAPI","deposit","setDeposit","to","from","amount","datetime","depositBackend","userToken","get","console","log","API_URL","process","env","NEXT_PUBLIC_API_URL","response","fetch","method","headers","Authorization","body","JSON","stringify","date","ok","statusText","responseObj","json"],"mappings":"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","sourcesContent":["import React, {useContext, useState} from \"react\";\r\nimport {MyContext} from \"../myContext/MyContext\";\r\nimport Card from \"../components/Card\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nfunction Deposit() {\r\n\r\n  const {\r\n    //state:\r\n    depositAmount,\r\n    balance,\r\n    depositError,\r\n    userName,\r\n    error,\r\n    loggedInUserName,\r\n    dateTime,\r\n    //functions:\r\n    depositHandleChange,\r\n    validateDeposit,\r\n    showSuccessMessageDeposit,\r\n    setError,\r\n    clearForm,\r\n    authenticateWithAPI  \r\n  } = useContext(MyContext);\r\n\r\n\tconst [deposit, setDeposit] = useState({\r\n\t\tto: \"\",\r\n    from: \"\",\r\n    amount: \"\" ,\r\n    datetime: \"\" \r\n\t});\r\n\r\n  async function depositBackend() {\r\n    if(!validateDeposit()) {\r\n    }\r\n\t\r\n\t\tlet userToken = Cookies.get(\"token\");\r\n\t\tif (!userToken) {\r\n\t\t\tauthenticateWithAPI();\r\n\t\t\tuserToken = Cookies.get(\"token\");\r\n\t\t}\r\n\t\t\r\n    console.log(userToken);\r\n\r\n\t\tconst API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\r\n\t\tconst response = await fetch(`${API_URL}/transactions/deposit`, {\r\n\t\t  method: \"POST\",\r\n\t\t\theaders: userToken && { Authorization: `Bearer ${userToken}` },\r\n\t\t \tbody: JSON.stringify({\r\n\t\t\t\tto: userName,\r\n\t\t\t\tfrom: loggedInUserName,\r\n        amount: depositAmount ,\r\n        date: dateTime \r\n\t\t  }),\r\n\t\t});\r\n\r\n\r\n    if (!response.ok) {\r\n\t\t\tconsole.log(response.statusText)\r\n\t\t  setError(response.statusText);\r\n\t\t} else {\r\n\t\t\tconsole.log(\"Success\");\r\n\t\t\tconst responseObj = await response.json();\r\n\t\t\tconst error = responseObj.error;\r\n\t\t\tif (error) {\r\n\t\t\t\tsetError(error);\r\n\t\t\t} else {\r\n        clearForm();\r\n      }\r\n\t\t}\r\n\t}\t\r\n\r\n  return (\r\n    <Card\r\n        bgcolor=\"warning\"\r\n        header=\"Deposit\"\r\n        body= {\r\n          <>  \r\n\r\n            {(() => {\r\n\t\t\t\t\t\t\tif (error) {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<div className=\"error\">{error}</div>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t\t})()}\r\n          \t{(() => {\r\n              if (depositError) {\r\n                return (\r\n                  <div className=\"error\">{depositError}</div>\r\n                  );\r\n              }\r\n            })()}\r\n\r\n\r\n            {/* {showSuccessMessageDeposit()} */}\r\n          \r\n\t\t\t\t\t\t{/* <h5 className=\"deposit mb-4\">Skip extra trips to the bank and deposit your money online!</h5> */}\r\n\t\t\t\t\t\t<h6 className=\"deposit-text mt-4 mb-5 font-weight-bolder\">Your current balance is: ${balance}</h6>\r\n\t\t\t\t\t\t<h6 className=\"deposit-text mt-4 font-weight-bolder\">The amount you wish to deposit:</h6>\r\n\t\t\t\t\t\t<input type=\"input\" className=\"form-control\" id=\"depositAmount\" placeholder=\"Amount\" onChange={depositHandleChange}/>\r\n\t\t\t\t\t\t{/* <div>\r\n\t\t\t\t\t\t\t<div className=\"error mb-3\">{depositError}</div>\r\n\t\t\t\t\t\t</div> */}\r\n\t\t\t\t\t\t<br/>                                                                              \r\n\t\t\t\t\t\t<button type=\"submit\" disabled={!depositAmount} id =\"deposit\" className=\"submitBtn btn btn-light\" onClick={() => depositBackend()}>Deposit</button>            \r\n          </>\r\n        }  \r\n    />\r\n  )\r\n}\r\n\r\nexport default Deposit;\r\n"]},"metadata":{},"sourceType":"module"}