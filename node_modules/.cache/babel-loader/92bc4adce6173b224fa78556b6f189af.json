{"ast":null,"code":"var _jsxFileName = \"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/pages/Invest.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { MyContext } from \"../myContext/MyContext\";\nimport Card from \"../components/Card\";\nimport Cookies from \"js-cookie\";\nimport gif from \"../images/gif.gif\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Invest() {\n  _s();\n\n  const {\n    //state:\n    balance,\n    error,\n    investError,\n    investSuccessMessageVisible,\n    investAmount,\n    //functions:\n    validateInvest,\n    setError,\n    authenticateWithAPI,\n    getBalance,\n    investHandleChange,\n    setInvestSuccessMessageVisible,\n    setInvestAmount\n  } = useContext(MyContext);\n  const [investResult, setInvestResult] = useState();\n  useEffect(() => {\n    getBalance();\n  });\n\n  async function submitInvest() {\n    if (!validateInvest()) {\n      return;\n    }\n\n    let userToken = Cookies.get(\"token\");\n\n    if (!userToken) {\n      authenticateWithAPI();\n      userToken = Cookies.get(\"token\");\n    }\n\n    let username = Cookies.get(\"username\");\n    const API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n    const response = await fetch(`${API_URL}/transactions/invest`, {\n      method: \"POST\",\n      headers: userToken && {\n        Authorization: `Bearer ${userToken}`\n      },\n      body: JSON.stringify({\n        to: username,\n        from: username,\n        amount: investAmount\n      })\n    });\n    setError(\"\");\n\n    if (!response.ok) {\n      setError(response.statusText);\n    } else {\n      const responseObj = await response.json();\n      const error = responseObj.error;\n\n      if (error) {\n        setError(error);\n      } else {\n        setInvestResult(responseObj.result === 1);\n        setInvestSuccessMessageVisible(true);\n      }\n\n      getBalance();\n    }\n\n    ;\n  }\n\n  ;\n\n  let clearMsgInvest = () => {\n    setInvestAmount(0.0);\n    setInvestSuccessMessageVisible(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    bgcolor: \"warning\",\n    header: \"Invest\",\n    body: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [(() => {\n        if (investSuccessMessageVisible === true) {\n          if (investResult) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"successMessage\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Wow!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 12\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Your investment has doubled the added amount!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 12\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                id: \"redirectToLambo\",\n                className: \"submitBtn btn btn-light\",\n                onClick: () => window.open(\"https://www.lamborghinistore.com/us/\"),\n                children: \"Ok\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 12\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 11\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"successMessage\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: gif,\n                alt: \"animated gif\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 12\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 11\n            }, this);\n          }\n        }\n      })(), (() => {\n        if (investError) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error\",\n            children: investError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 19\n          }, this);\n        }\n      })(), (() => {\n        if (error) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 19\n          }, this);\n        }\n      })(), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"invest-text mt-4 mb-5 font-weight-bolder\",\n        children: [\"Your current balance is: $\", balance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"invest-text mt-4 mb-2 font-weight-bolder\",\n        children: \"The amount you wish to invest:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"input\",\n        className: \"form-control\",\n        value: investAmount,\n        onChange: investHandleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !investAmount,\n          className: \"submitBtn btn btn-light\",\n          id: \"invest\",\n          onClick: () => submitInvest(),\n          children: \"Invest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 7\n        }, this)\n      }, void 0, false)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Invest, \"BwwvghBo8Q31SVHD/EuRw9PHpAc=\");\n\n_c = Invest;\nexport default Invest;\n\nvar _c;\n\n$RefreshReg$(_c, \"Invest\");","map":{"version":3,"sources":["/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/pages/Invest.js"],"names":["React","useContext","useEffect","useState","MyContext","Card","Cookies","gif","Invest","balance","error","investError","investSuccessMessageVisible","investAmount","validateInvest","setError","authenticateWithAPI","getBalance","investHandleChange","setInvestSuccessMessageVisible","setInvestAmount","investResult","setInvestResult","submitInvest","userToken","get","username","API_URL","process","env","NEXT_PUBLIC_API_URL","response","fetch","method","headers","Authorization","body","JSON","stringify","to","from","amount","ok","statusText","responseObj","json","result","clearMsgInvest","window","open"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from \"react\";\nimport {MyContext} from \"../myContext/MyContext\";\nimport Card from \"../components/Card\";\nimport Cookies from \"js-cookie\";\nimport gif from \"../images/gif.gif\";\n\nfunction Invest() {\n\n\tconst {\n\t\t//state:\n\t\tbalance,\n\t\terror,\n\t\tinvestError,\n\t\tinvestSuccessMessageVisible,\n\t\tinvestAmount,\n\t\t//functions:\n\t\tvalidateInvest,\n\t\tsetError,\n\t\tauthenticateWithAPI ,\n\t\tgetBalance,\n\t\tinvestHandleChange,\n\t\tsetInvestSuccessMessageVisible,\n\t\tsetInvestAmount\n\t} = useContext(MyContext);\n\n\tconst [investResult, setInvestResult] = useState();\n\n\tuseEffect(()=> {\n\t\tgetBalance();\n\t}); \n\t\n\n\tasync function submitInvest() {\n\t\tif(!validateInvest()) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet userToken = Cookies.get(\"token\");\n\t\t\tif (!userToken) {\n\t\t\t\tauthenticateWithAPI();\n\t\t\t\tuserToken = Cookies.get(\"token\");\n\t\t\t}\n\n\t\t\tlet username = Cookies.get(\"username\");\n\t\t\t\n\t\t\tconst API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n\t\t\tconst response = await fetch(`${API_URL}/transactions/invest`, {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: userToken && { Authorization: `Bearer ${userToken}` },\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tto: username,\n\t\t\t\t\tfrom: username,\n\t\t\t\t\tamount: investAmount\n\t\t\t\t}),\n\t\t\t});\n\n\t\tsetError(\"\");\n    if (!response.ok) {\n\t\t  setError(response.statusText);\n\t\t} else {\n\t\t\tconst responseObj = await response.json();\n\t\t\tconst error = responseObj.error;\n\t\t\tif (error) {\n\t\t\t\tsetError(error);\n\t\t\t} else {\n        setInvestResult(responseObj.result === 1);\t\t\t\n\t\t\t\tsetInvestSuccessMessageVisible(true);\n      }\n\t\t\tgetBalance();\n\t\t};\n  };\n\n\tlet clearMsgInvest = () => {\n    setInvestAmount(0.0);\n    setInvestSuccessMessageVisible(false);\n  }\n\n\n\treturn (\n\t\t<Card\n\t\t\t\tbgcolor=\"warning\"\n\t\t\t\theader=\"Invest\"\n\t\t\t\tbody= {\n\t\t\t\t\t<>  \n\t\t\t\t\t\t{(() => {\n\t\t\t\t\t\t\tif (investSuccessMessageVisible === true) {\n\t\t\t\t\t\t\t\tif (investResult) {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<div className=\"successMessage\">\n\t\t\t\t\t\t\t\t\t\t\t<h5>Wow!</h5>\n\t\t\t\t\t\t\t\t\t\t\t<p>Your investment has doubled the added amount!</p>\n\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" id=\"redirectToLambo\" className=\"submitBtn btn btn-light\" onClick={() => window.open(\"https://www.lamborghinistore.com/us/\")}>Ok</button>             \n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<div className=\"successMessage\">\n\t\t\t\t\t\t\t\t\t\t\t<img src={gif} alt=\"animated gif\" />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n            })()}\n\n\n\t\t\t\t\t\t{(() => {\n              if (investError) {\n                return (\n                  <div className=\"error\">{investError}</div>\n                  );\n              }\n            })()}\n\n\t\t\t\t\t\t{(() => {\n              if (error) {\n                return (\n                  <div className=\"error\">{error}</div>\n                  );\n              }\n            })()}\n\n\t\t\t\t\t\t<h6 className=\"invest-text mt-4 mb-5 font-weight-bolder\" >Your current balance is: ${balance}</h6>\n\t\t\t\t\t\t{/* amount */}\n\t\t\t\t\t\t<h6 className=\"invest-text mt-4 mb-2 font-weight-bolder\">The amount you wish to invest:</h6>\n\t\t\t\t\t\t{/* added value so that state can change */}\n\t\t\t\t\t\t<input type=\"input\" className=\"form-control\" value={investAmount} onChange={investHandleChange}/>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t<button type=\"submit\" disabled={!investAmount} className=\"submitBtn btn btn-light\" id=\"invest\" onClick={() => submitInvest()}>Invest</button> \n\t\t\t\t\t\t</>\n\t\t\t\t\t</>\n\t\t\t\t}  \n\t\t/>\n\t)\n}\n\nexport default Invest;"]},"metadata":{},"sourceType":"module"}