{"ast":null,"code":"import _asyncToGenerator from\"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/node_modules/@babel/runtime/regenerator/index.js\";import React,{useContext,useEffect}from\"react\";import{MyContext}from\"../myContext/MyContext\";import Card from\"../components/Card\";import Cookies from\"js-cookie\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function Withdraw(){var _useContext=useContext(MyContext),balance=_useContext.balance,error=_useContext.error,withdrawAmount=_useContext.withdrawAmount,withdrawHandleChange=_useContext.withdrawHandleChange,withdrawError=_useContext.withdrawError,withdrawSuccessMessageVisible=_useContext.withdrawSuccessMessageVisible,authenticateWithAPI=_useContext.authenticateWithAPI,setError=_useContext.setError,validateWithdraw=_useContext.validateWithdraw,setWithdrawAmount=_useContext.setWithdrawAmount,setWithdrawSuccessMessageVisible=_useContext.setWithdrawSuccessMessageVisible,getBalance=_useContext.getBalance;useEffect(function(){getBalance();});// const [withdraw, setWithdraw] = useState({\n//   amount: \"\" ,\n//   datetime: \"\" \n// });\nfunction submitWithdraw(){return _submitWithdraw.apply(this,arguments);}function _submitWithdraw(){_submitWithdraw=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var userToken,username,API_URL,response,responseObj,_error;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(validateWithdraw()){_context.next=2;break;}return _context.abrupt(\"return\");case 2:;userToken=Cookies.get(\"token\");if(!userToken){authenticateWithAPI();userToken=Cookies.get(\"token\");}username=Cookies.get(\"username\");;if(!username){setError(\"Not logged in!\");}API_URL=process.env.NEXT_PUBLIC_API_URL||\"http://localhost:1337\";_context.next=11;return fetch(\"\".concat(API_URL,\"/transactions/withdraw\"),{method:\"POST\",headers:userToken&&{Authorization:\"Bearer \".concat(userToken)},body:JSON.stringify({to:username,from:username,amount:withdrawAmount})});case 11:response=_context.sent;if(response.ok){_context.next=17;break;}console.log(response.statusText);setError(response.statusText);_context.next=22;break;case 17:_context.next=19;return response.json();case 19:responseObj=_context.sent;_error=responseObj.error;if(_error){setError(_error);setWithdrawSuccessMessageVisible(false);}else{setWithdrawSuccessMessageVisible(true);}case 22:;case 23:case\"end\":return _context.stop();}}},_callee);}));return _submitWithdraw.apply(this,arguments);};var clearMsgWithdraw=function clearMsgWithdraw(){setWithdrawAmount(\"\");setWithdrawSuccessMessageVisible(false);};return/*#__PURE__*/_jsx(Card,{bgcolor:\"warning\",header:\"Withdraw\",body:/*#__PURE__*/_jsxs(_Fragment,{children:[function(){if(error){return/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:error});}}(),function(){if(withdrawError){return/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:withdrawError});}}(),function(){if(withdrawSuccessMessageVisible===true){return/*#__PURE__*/_jsxs(\"div\",{className:\"successMessage\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Awesome!\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Your withdrawal was succesful.\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",id:\"submitbutton\",className:\"submitBtn btn btn-light\",onClick:function onClick(){return clearMsgWithdraw();},children:\"Ok\"})]});}}(),/*#__PURE__*/_jsxs(\"h6\",{className:\"card-text mt-4 mb-5 font-weight-bolder\",children:[\"Your current balance is: $\",balance]}),/*#__PURE__*/_jsx(\"h6\",{className:\"card-text mt-4 mb-2 font-weight-bolder\",children:\"The amount you wish to withdraw:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"input\",className:\"form-control\",id:\"withdrawAmount\",value:withdrawAmount,onChange:withdrawHandleChange}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:!withdrawAmount,id:\"submitbutton\",className:\"submitBtn btn btn-light\",onClick:function onClick(){return submitWithdraw();},children:\"Withdraw\"})]})});}export default Withdraw;","map":{"version":3,"sources":["/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/pages/Withdraw.js"],"names":["React","useContext","useEffect","MyContext","Card","Cookies","Withdraw","balance","error","withdrawAmount","withdrawHandleChange","withdrawError","withdrawSuccessMessageVisible","authenticateWithAPI","setError","validateWithdraw","setWithdrawAmount","setWithdrawSuccessMessageVisible","getBalance","submitWithdraw","userToken","get","username","API_URL","process","env","NEXT_PUBLIC_API_URL","fetch","method","headers","Authorization","body","JSON","stringify","to","from","amount","response","ok","console","log","statusText","json","responseObj","clearMsgWithdraw"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect} from \"react\";\r\nimport {MyContext} from \"../myContext/MyContext\";\r\nimport Card from \"../components/Card\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nfunction Withdraw() {\r\n  const {\r\n    //state:\r\n    balance,\r\n    error,\r\n    //functions:\r\n    withdrawAmount,\r\n    withdrawHandleChange,\r\n    withdrawError,\r\n    withdrawSuccessMessageVisible,\r\n    authenticateWithAPI ,\r\n    setError,\r\n    validateWithdraw,\r\n    setWithdrawAmount,\r\n    setWithdrawSuccessMessageVisible,\r\n    getBalance\r\n  } = useContext(MyContext);\r\n\r\n  useEffect(()=> {\r\n    getBalance();\r\n  }); \r\n\r\n  // const [withdraw, setWithdraw] = useState({\r\n  //   amount: \"\" ,\r\n  //   datetime: \"\" \r\n\t// });\r\n\r\n  async function submitWithdraw() {\r\n    if(!validateWithdraw()) {\r\n      return;\r\n    };\r\n\r\n    let userToken = Cookies.get(\"token\");\r\n\t\tif (!userToken) {\r\n\t\t\tauthenticateWithAPI();\r\n\t\t\tuserToken = Cookies.get(\"token\");\r\n\t\t}\r\n\r\n    let username = Cookies.get(\"username\");;\r\n    if (!username) {\r\n      setError(\"Not logged in!\");\r\n    }\r\n\r\n    const API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\r\n\t\tconst response = await fetch(`${API_URL}/transactions/withdraw`, {\r\n\t\t  method: \"POST\",\r\n\t\t\theaders: userToken && { Authorization: `Bearer ${userToken}` },\r\n\t\t \tbody: JSON.stringify({\r\n        to: username,\r\n        from: username,\r\n        amount: withdrawAmount\r\n\t\t  }),\r\n\t\t});\r\n\r\n    if (!response.ok) {\r\n\t\t\tconsole.log(response.statusText)\r\n\t\t  setError(response.statusText);\r\n\t\t} else {\r\n\t\t\tconst responseObj = await response.json();\r\n\t\t\tconst error = responseObj.error;\r\n\t\t\tif (error) {\r\n\t\t\t\tsetError(error);\r\n        setWithdrawSuccessMessageVisible(false)\r\n\t\t\t} else {\r\n        setWithdrawSuccessMessageVisible(true);\r\n      }\r\n\t\t};\r\n  };\r\n\r\n  let clearMsgWithdraw = () => {\r\n    setWithdrawAmount(\"\");\r\n    setWithdrawSuccessMessageVisible(false);\r\n  }\r\n\r\n  return (\r\n    <Card\r\n\t\t\tbgcolor=\"warning\"\r\n\t\t\theader=\"Withdraw\"\r\n\t\t\tbody={\r\n\t\t\t\t<>  \r\n          {(() => {\r\n            if (error) {\r\n              return (\r\n                <div className=\"error\">{error}</div>\r\n                );\r\n            }\r\n          })()}\r\n          \r\n          {(() => {\r\n            if (withdrawError) {\r\n              return (\r\n                <div className=\"error\">{withdrawError}</div>\r\n                );\r\n            }\r\n          })()}\r\n\r\n          {(() => {\r\n            if (withdrawSuccessMessageVisible === true) {\r\n              return (\r\n                <div className=\"successMessage\">\r\n                  <h5>Awesome!</h5>\r\n                  <p>Your withdrawal was succesful.</p>\r\n                  {/* show OK button */}\r\n                  <button type=\"submit\" id=\"submitbutton\" className=\"submitBtn btn btn-light\" onClick={() => clearMsgWithdraw()}>Ok</button>             \r\n                </div>\r\n\t\t\t\t\t    );\r\n\t\t\t      } \r\n\t\t\t\t\t\t})()}\r\n\t\t\t\t\t<h6 className=\"card-text mt-4 mb-5 font-weight-bolder\">Your current balance is: ${balance}</h6>\r\n\t\t\t\t\t<h6 className=\"card-text mt-4 mb-2 font-weight-bolder\">The amount you wish to withdraw:</h6>\r\n          {/* added value so that state can change */}\r\n\t\t\t\t\t<input type=\"input\" className=\"form-control\" id=\"withdrawAmount\" value={withdrawAmount} onChange={withdrawHandleChange}/>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<button type=\"submit\" disabled={!withdrawAmount} id=\"submitbutton\" className=\"submitBtn btn btn-light\" onClick={() => submitWithdraw()}>Withdraw</button>\r\n\t\t\t\t</>\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default Withdraw;\r\n"]},"metadata":{},"sourceType":"module"}