{"ast":null,"code":"var _jsxFileName = \"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/pages/AllData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { MyContext } from \"../myContext/MyContext\";\nimport Cookies from \"js-cookie\";\nimport Card from \"../components/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AllData() {\n  _s();\n\n  const {\n    authenticateWithAPI,\n    destinationUser,\n    username,\n    transferAmount,\n    createdAt,\n    setError\n  } = useContext(MyContext);\n\n  async function getAlltransactions() {\n    let userToken = Cookies.get(\"token\");\n\n    if (!userToken) {\n      authenticateWithAPI();\n      userToken = Cookies.get(\"token\");\n    }\n\n    const API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n    const response = await fetch(`${API_URL}/transactions/alltransactions`, {\n      method: \"POST\",\n      headers: userToken && {\n        Authorization: `Bearer ${userToken}`\n      },\n      body: JSON.stringify({\n        to: destinationUser,\n        from: username,\n        amount: transferAmount,\n        createdAt: createdAt\n      })\n    });\n\n    if (!response.ok) {\n      console.log(response.statusText);\n      setError(response.statusText);\n    } else {\n      const responseObj = await response.json();\n      const error = responseObj.error;\n\n      if (error) {\n        setError(error);\n      } else {\n        return;\n      }\n    }\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    bgcolor: \"warning\",\n    header: \"My Account Info\",\n    body: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"balance mb-3\",\n        children: \"Account information:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alldata\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: [\"To: \", destinationUser]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: [\"From: \", username, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: [\"Amount: \", transferAmount, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: [\"Date: \", createdAt]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 3\n  }, this);\n}\n\n_s(AllData, \"BTfCPyS6RK1DnVLL2nfrGVmgPFc=\");\n\n_c = AllData;\n;\nexport default AllData;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllData\");","map":{"version":3,"sources":["/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/pages/AllData.js"],"names":["React","useContext","MyContext","Cookies","Card","AllData","authenticateWithAPI","destinationUser","username","transferAmount","createdAt","setError","getAlltransactions","userToken","get","API_URL","process","env","NEXT_PUBLIC_API_URL","response","fetch","method","headers","Authorization","body","JSON","stringify","to","from","amount","ok","console","log","statusText","responseObj","json","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAAQC,SAAR,QAAwB,wBAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;;;AAGA,SAASC,OAAT,GAAmB;AAAA;;AAElB,QAAM;AACLC,IAAAA,mBADK;AAELC,IAAAA,eAFK;AAGLC,IAAAA,QAHK;AAILC,IAAAA,cAJK;AAKLC,IAAAA,SALK;AAMLC,IAAAA;AANK,MAOFV,UAAU,CAACC,SAAD,CAPd;;AASA,iBAAeU,kBAAf,GAAoC;AAEnC,QAAIC,SAAS,GAAGV,OAAO,CAACW,GAAR,CAAY,OAAZ,CAAhB;;AACA,QAAI,CAACD,SAAL,EAAgB;AACfP,MAAAA,mBAAmB;AACnBO,MAAAA,SAAS,GAAGV,OAAO,CAACW,GAAR,CAAY,OAAZ,CAAZ;AACA;;AAED,UAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,mBAAZ,IAAmC,uBAAnD;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,OAAQ,+BAAZ,EAA4C;AACtEM,MAAAA,MAAM,EAAE,MAD8D;AAEvEC,MAAAA,OAAO,EAAET,SAAS,IAAI;AAAEU,QAAAA,aAAa,EAAG,UAASV,SAAU;AAArC,OAFiD;AAGtEW,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACrBC,QAAAA,EAAE,EAAEpB,eADiB;AAEjBqB,QAAAA,IAAI,EAAEpB,QAFW;AAGjBqB,QAAAA,MAAM,EAAEpB,cAHS;AAIrBC,QAAAA,SAAS,EAAEA;AAJU,OAAf;AAHgE,KAA5C,CAA5B;;AAWE,QAAI,CAACS,QAAQ,CAACW,EAAd,EAAkB;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAYb,QAAQ,CAACc,UAArB;AACCtB,MAAAA,QAAQ,CAACQ,QAAQ,CAACc,UAAV,CAAR;AACA,KAHA,MAGM;AACN,YAAMC,WAAW,GAAG,MAAMf,QAAQ,CAACgB,IAAT,EAA1B;AACA,YAAMC,KAAK,GAAGF,WAAW,CAACE,KAA1B;;AACA,UAAIA,KAAJ,EAAW;AACVzB,QAAAA,QAAQ,CAACyB,KAAD,CAAR;AACA,OAFD,MAEO;AACN;AACA;AACD;AACD;;AAAA;AAEF,sBACC,QAAC,IAAD;AACC,IAAA,OAAO,EAAC,SADT;AAEC,IAAA,MAAM,EAAC,iBAFR;AAGC,IAAA,IAAI,eACF;AAAA,8BACC;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACC;AAAA,6BAAS7B,eAAT;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAA,+BAAWC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD,eAGC;AAAA,iCAAaC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHD,eAIC;AAAA,+BAAWC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAJH;AAAA;AAAA;AAAA;AAAA,UADD;AAiBA;;GA9DQL,O;;KAAAA,O;AA8DR;AAGD,eAAeA,OAAf","sourcesContent":["import React, {useContext} from 'react';\r\nimport {MyContext} from \"../myContext/MyContext\";\r\nimport Cookies from \"js-cookie\";\r\nimport Card from \"../components/Card\";\r\n\r\n\r\nfunction AllData() {\r\n\r\n\tconst {\r\n\t\tauthenticateWithAPI,\r\n\t\tdestinationUser,\r\n\t\tusername,\r\n\t\ttransferAmount,\r\n\t\tcreatedAt,\r\n\t\tsetError,\r\n\t} = useContext(MyContext);\r\n\r\n\tasync function getAlltransactions() {\r\n\r\n\t\tlet userToken = Cookies.get(\"token\");\r\n\t\tif (!userToken) {\r\n\t\t\tauthenticateWithAPI();\r\n\t\t\tuserToken = Cookies.get(\"token\");\r\n\t\t}\r\n\t\t\r\n\t\tconst API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\r\n\t\tconst response = await fetch(`${API_URL}/transactions/alltransactions`, {\r\n\t\t  method: \"POST\",\r\n\t\t\theaders: userToken && { Authorization: `Bearer ${userToken}` },\r\n\t\t \tbody: JSON.stringify({\r\n\t\t\t\tto: destinationUser,\r\n        from: username,\r\n        amount: transferAmount,\r\n\t\t\t\tcreatedAt: createdAt\r\n\t\t  }),\r\n\t\t});\r\n\r\n    if (!response.ok) {\r\n\t\t\tconsole.log(response.statusText)\r\n\t\t  setError(response.statusText);\r\n\t\t\t} else {\r\n\t\t\t\tconst responseObj = await response.json();\r\n\t\t\t\tconst error = responseObj.error;\r\n\t\t\t\tif (error) {\r\n\t\t\t\t\tsetError(error);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\treturn (\r\n\t\t<Card\r\n\t\t\tbgcolor=\"warning\"\r\n\t\t\theader=\"My Account Info\"\r\n\t\t\tbody={\r\n\t\t\t\t\t<>  \r\n\t\t\t\t\t\t<h5 className=\"balance mb-3\">Account information:</h5>\r\n\t\t\t\t\t\t<div className=\"alldata\">\r\n\t\t\t\t\t\t\t<h6>To: {destinationUser}</h6>\r\n\t\t\t\t\t\t\t<h6>From: {username} </h6>\r\n\t\t\t\t\t\t\t<h6>Amount: {transferAmount} </h6>\r\n\t\t\t\t\t\t\t<h6>Date: {createdAt}</h6>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t}\r\n\t\t/>\r\n\t)\r\n};\r\n\r\n\t\r\nexport default AllData;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}