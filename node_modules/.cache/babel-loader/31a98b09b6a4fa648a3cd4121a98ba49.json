{"ast":null,"code":"var _jsxFileName = \"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/pages/AllData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { MyContext } from \"../myContext/MyContext\";\nimport Cookies from \"js-cookie\";\nimport Card from \"../components/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nasync function AllData() {\n  _s();\n\n  const {\n    authenticateWithAPI,\n    setError\n  } = useContext(MyContext);\n  const [transactionTo, setTransactionTo] = useState([]);\n  const [transactionFrom, setTransactionFrom] = useState([]);\n  const [transactionAmount, setTransactionAmount] = useState([]);\n  const [transactionDate, setTransactionDate] = useState([]);\n  let userToken = Cookies.get(\"token\");\n\n  if (!userToken) {\n    authenticateWithAPI();\n    userToken = Cookies.get(\"token\");\n  }\n\n  let username = Cookies.get(\"username\");\n\n  if (!username) {\n    return;\n  }\n\n  const API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n  const response = await fetch(`${API_URL}/transactions/alltransactions`, {\n    method: \"POST\",\n    headers: userToken && {\n      Authorization: `Bearer ${userToken}`\n    },\n    body: JSON.stringify({\n      username: username\n    })\n  });\n\n  if (!response.ok) {\n    console.log(response.statusText);\n    setError(response.statusText);\n  } else {\n    const responseObj = await response.json();\n    const error = responseObj.error;\n    const to = responseObj.to;\n    const from = responseObj.from;\n    const amount = responseObj.amount;\n    const createdAt = responseObj.createdAt;\n\n    if (error) {\n      setError(error);\n    }\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: transactionTo.map(recipient => /*#__PURE__*/_jsxDEV(Card, {\n      bgcolor: \"warning\",\n      header: \"All Data\",\n      body: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alldata\",\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [\"To: \", to]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 8\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this))\n  }, void 0, false);\n}\n\n_s(AllData, \"eKQlZJQrADT1kAiKN3+aXebSQhs=\");\n\n_c = AllData;\n;\nexport default AllData;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllData\");","map":{"version":3,"sources":["/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/pages/AllData.js"],"names":["React","useContext","useState","MyContext","Cookies","Card","AllData","authenticateWithAPI","setError","transactionTo","setTransactionTo","transactionFrom","setTransactionFrom","transactionAmount","setTransactionAmount","transactionDate","setTransactionDate","userToken","get","username","API_URL","process","env","NEXT_PUBLIC_API_URL","response","fetch","method","headers","Authorization","body","JSON","stringify","ok","console","log","statusText","responseObj","json","error","to","from","amount","createdAt","map","recipient"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,SAAQC,SAAR,QAAwB,wBAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;;;AAGA,eAAeC,OAAf,GAAyB;AAAA;;AAExB,QAAM;AACLC,IAAAA,mBADK;AAELC,IAAAA;AAFK,MAGFP,UAAU,CAACE,SAAD,CAHd;AAKA,QAAM,CAACM,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACS,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACW,iBAAD,EAAoBC,oBAApB,IAA4CZ,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAM,CAACa,eAAD,EAAkBC,kBAAlB,IAAwCd,QAAQ,CAAC,EAAD,CAAtD;AAEA,MAAIe,SAAS,GAAGb,OAAO,CAACc,GAAR,CAAY,OAAZ,CAAhB;;AACA,MAAI,CAACD,SAAL,EAAgB;AACfV,IAAAA,mBAAmB;AACnBU,IAAAA,SAAS,GAAGb,OAAO,CAACc,GAAR,CAAY,OAAZ,CAAZ;AACA;;AAED,MAAIC,QAAQ,GAAGf,OAAO,CAACc,GAAR,CAAY,UAAZ,CAAf;;AACA,MAAI,CAACC,QAAL,EAAe;AACd;AACA;;AAED,QAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,mBAAZ,IAAmC,uBAAnD;AACA,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,OAAQ,+BAAZ,EAA4C;AACvEM,IAAAA,MAAM,EAAE,MAD+D;AAEvEC,IAAAA,OAAO,EAAEV,SAAS,IAAI;AAAEW,MAAAA,aAAa,EAAG,UAASX,SAAU;AAArC,KAFiD;AAGvEY,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACpBZ,MAAAA,QAAQ,EAAEA;AADU,KAAf;AAHiE,GAA5C,CAA5B;;AAQA,MAAI,CAACK,QAAQ,CAACQ,EAAd,EAAkB;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAYV,QAAQ,CAACW,UAArB;AACA3B,IAAAA,QAAQ,CAACgB,QAAQ,CAACW,UAAV,CAAR;AACC,GAHF,MAGQ;AACN,UAAMC,WAAW,GAAG,MAAMZ,QAAQ,CAACa,IAAT,EAA1B;AACA,UAAMC,KAAK,GAAGF,WAAW,CAACE,KAA1B;AACA,UAAMC,EAAE,GAAGH,WAAW,CAACG,EAAvB;AACA,UAAMC,IAAI,GAAGJ,WAAW,CAACI,IAAzB;AACA,UAAMC,MAAM,GAAGL,WAAW,CAACK,MAA3B;AACA,UAAMC,SAAS,GAAGN,WAAW,CAACM,SAA9B;;AACA,QAAIJ,KAAJ,EAAW;AACV9B,MAAAA,QAAQ,CAAC8B,KAAD,CAAR;AACA;AACD;;AAAA;AAEF,sBACC;AAAA,cACE7B,aAAa,CAACkC,GAAd,CAAmBC,SAAD,iBAClB,QAAC,IAAD;AACC,MAAA,OAAO,EAAC,SADT;AAEC,MAAA,MAAM,EAAC,UAFR;AAGC,MAAA,IAAI,eACH;AAAA,+BACC;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,iCACC;AAAA,+BAASL,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAJF;AAAA;AAAA;AAAA;AAAA,YADA;AADF,mBADD;AAiBA;;GAhEcjC,O;;KAAAA,O;AAgEd;AAGD,eAAeA,OAAf","sourcesContent":["import React, {useContext, useState} from 'react';\r\nimport {MyContext} from \"../myContext/MyContext\";\r\nimport Cookies from \"js-cookie\";\r\nimport Card from \"../components/Card\";\r\n\r\n\r\nasync function AllData() {\r\n\r\n\tconst {\r\n\t\tauthenticateWithAPI,\r\n\t\tsetError,\r\n\t} = useContext(MyContext);\r\n\r\n\tconst [transactionTo, setTransactionTo] = useState([]);\r\n\tconst [transactionFrom, setTransactionFrom] = useState([]);\r\n\tconst [transactionAmount, setTransactionAmount] = useState([]);\r\n\tconst [transactionDate, setTransactionDate] = useState([]);\r\n\r\n\tlet userToken = Cookies.get(\"token\");\r\n\tif (!userToken) {\r\n\t\tauthenticateWithAPI();\r\n\t\tuserToken = Cookies.get(\"token\");\r\n\t}\r\n\r\n\tlet username = Cookies.get(\"username\");\r\n\tif (!username) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\r\n\tconst response = await fetch(`${API_URL}/transactions/alltransactions`, {\r\n\t\tmethod: \"POST\",\r\n\t\theaders: userToken && { Authorization: `Bearer ${userToken}` },\r\n\t\tbody: JSON.stringify({\r\n\t\t\tusername: username\r\n\t\t}),\r\n\t});\r\n\r\n\tif (!response.ok) {\r\n\t\tconsole.log(response.statusText)\r\n\t\tsetError(response.statusText);\r\n\t\t} else {\r\n\t\t\tconst responseObj = await response.json();\r\n\t\t\tconst error = responseObj.error;\r\n\t\t\tconst to = responseObj.to;\r\n\t\t\tconst from = responseObj.from;\r\n\t\t\tconst amount = responseObj.amount;\r\n\t\t\tconst createdAt = responseObj.createdAt\r\n\t\t\tif (error) {\r\n\t\t\t\tsetError(error);\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{transactionTo.map((recipient) =>\r\n\t\t\t\t<Card\r\n\t\t\t\t\tbgcolor=\"warning\"\r\n\t\t\t\t\theader=\"All Data\"\r\n\t\t\t\t\tbody={\r\n\t\t\t\t\t\t<>  \r\n\t\t\t\t\t\t\t<div className=\"alldata\">\r\n\t\t\t\t\t\t\t\t<h6>To: {to}</h6>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n};\r\n\r\n\t\r\nexport default AllData;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}