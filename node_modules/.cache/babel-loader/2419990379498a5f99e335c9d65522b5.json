{"ast":null,"code":"var _jsxFileName = \"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/pages/AllData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { MyContext } from \"../myContext/MyContext\";\nimport Cookies from \"js-cookie\";\nimport Card from \"../components/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AllData() {\n  _s();\n\n  const {\n    authenticateWithAPI,\n    destinationUser,\n    username,\n    transferAmount,\n    createdAt,\n    setError\n  } = useContext(MyContext);\n  const [toArray, setToArray] = useState(\"\");\n  const [fromArray, setfromArray] = usestate(\"\");\n  const [amountArray, setAmountArray] = useState(\"\");\n  const [createdAtArray, setCreatedAtArray] = useState(\"\");\n\n  async function getAlltransactions() {\n    let userToken = Cookies.get(\"token\");\n\n    if (!userToken) {\n      authenticateWithAPI();\n      userToken = Cookies.get(\"token\");\n    }\n\n    let username = Cookies.get(\"username\");\n\n    if (!username) {\n      return;\n    }\n\n    const API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n    const response = await fetch(`${API_URL}/transactions/alltransactions`, {\n      method: \"POST\",\n      headers: userToken && {\n        Authorization: `Bearer ${userToken}`\n      },\n      body: JSON.stringify({\n        username: username\n      })\n    });\n\n    if (!response.ok) {\n      console.log(response.statusText);\n      setError(response.statusText);\n    } else {\n      const responseObj = await response.json();\n      const error = responseObj.error;\n      const to = responseObj.to;\n      const from = responseObj.from;\n      const amount = responseObj.amount;\n      const createdAt = responseObj.createdAt;\n\n      if (error) {\n        setError(error);\n      } else {}\n    }\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: toArray.map(to => /*#__PURE__*/_jsxDEV(Card, {\n      bgcolor: \"warning\",\n      header: \"All Data\",\n      body: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alldata\",\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [\"To: \", destinationUser]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 8\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this))\n  }, void 0, false);\n}\n\n_s(AllData, \"3Fl0ltpSq4cEklTFY3G9WjvrQCA=\");\n\n_c = AllData;\n;\nexport default AllData;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllData\");","map":{"version":3,"sources":["/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/3rd semester/badbank_backend_test/betterbank_frontend/src/pages/AllData.js"],"names":["React","useContext","useState","MyContext","Cookies","Card","AllData","authenticateWithAPI","destinationUser","username","transferAmount","createdAt","setError","toArray","setToArray","fromArray","setfromArray","usestate","amountArray","setAmountArray","createdAtArray","setCreatedAtArray","getAlltransactions","userToken","get","API_URL","process","env","NEXT_PUBLIC_API_URL","response","fetch","method","headers","Authorization","body","JSON","stringify","ok","console","log","statusText","responseObj","json","error","to","from","amount","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,SAAQC,SAAR,QAAwB,wBAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;;;AAGA,SAASC,OAAT,GAAmB;AAAA;;AAElB,QAAM;AACLC,IAAAA,mBADK;AAELC,IAAAA,eAFK;AAGLC,IAAAA,QAHK;AAILC,IAAAA,cAJK;AAKLC,IAAAA,SALK;AAMLC,IAAAA;AANK,MAOFX,UAAU,CAACE,SAAD,CAPd;AASA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4BC,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACkB,cAAD,EAAiBC,iBAAjB,IAAsCnB,QAAQ,CAAC,EAAD,CAApD;;AAEA,iBAAeoB,kBAAf,GAAoC;AAEnC,QAAIC,SAAS,GAAGnB,OAAO,CAACoB,GAAR,CAAY,OAAZ,CAAhB;;AACA,QAAI,CAACD,SAAL,EAAgB;AACfhB,MAAAA,mBAAmB;AACnBgB,MAAAA,SAAS,GAAGnB,OAAO,CAACoB,GAAR,CAAY,OAAZ,CAAZ;AACA;;AACD,QAAIf,QAAQ,GAAGL,OAAO,CAACoB,GAAR,CAAY,UAAZ,CAAf;;AACA,QAAI,CAACf,QAAL,EAAe;AACd;AACA;;AACD,UAAMgB,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,mBAAZ,IAAmC,uBAAnD;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,OAAQ,+BAAZ,EAA4C;AACtEM,MAAAA,MAAM,EAAE,MAD8D;AAEvEC,MAAAA,OAAO,EAAET,SAAS,IAAI;AAAEU,QAAAA,aAAa,EAAG,UAASV,SAAU;AAArC,OAFiD;AAGtEW,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACrB3B,QAAAA,QAAQ,EAAEA;AADW,OAAf;AAHgE,KAA5C,CAA5B;;AAQE,QAAI,CAACoB,QAAQ,CAACQ,EAAd,EAAkB;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAYV,QAAQ,CAACW,UAArB;AACC5B,MAAAA,QAAQ,CAACiB,QAAQ,CAACW,UAAV,CAAR;AACA,KAHA,MAGM;AACN,YAAMC,WAAW,GAAG,MAAMZ,QAAQ,CAACa,IAAT,EAA1B;AACA,YAAMC,KAAK,GAAGF,WAAW,CAACE,KAA1B;AACA,YAAMC,EAAE,GAAGH,WAAW,CAACG,EAAvB;AACA,YAAMC,IAAI,GAAGJ,WAAW,CAACI,IAAzB;AACA,YAAMC,MAAM,GAAGL,WAAW,CAACK,MAA3B;AACA,YAAMnC,SAAS,GAAG8B,WAAW,CAAC9B,SAA9B;;AACA,UAAIgC,KAAJ,EAAW;AACV/B,QAAAA,QAAQ,CAAC+B,KAAD,CAAR;AACA,OAFD,MAEO,CAEN;AACD;AACD;;AAAA;AAEF,sBACC;AAAA,cACE9B,OAAO,CAACkC,GAAR,CAAaH,EAAD,iBACZ,QAAC,IAAD;AACC,MAAA,OAAO,EAAC,SADT;AAEC,MAAA,MAAM,EAAC,UAFR;AAGC,MAAA,IAAI,eACH;AAAA,+BACC;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,iCACC;AAAA,+BAASpC,eAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAJF;AAAA;AAAA;AAAA;AAAA,YADA;AADF,mBADD;AAmBA;;GAzEQF,O;;KAAAA,O;AAyER;AAGD,eAAeA,OAAf","sourcesContent":["import React, {useContext, useState} from 'react';\r\nimport {MyContext} from \"../myContext/MyContext\";\r\nimport Cookies from \"js-cookie\";\r\nimport Card from \"../components/Card\";\r\n\r\n\r\nfunction AllData() {\r\n\r\n\tconst {\r\n\t\tauthenticateWithAPI,\r\n\t\tdestinationUser,\r\n\t\tusername,\r\n\t\ttransferAmount,\r\n\t\tcreatedAt,\r\n\t\tsetError,\r\n\t} = useContext(MyContext);\r\n\r\n\tconst [toArray, setToArray] = useState(\"\");\r\n\tconst [fromArray, setfromArray] = usestate(\"\");\r\n\tconst [amountArray, setAmountArray] = useState(\"\");\r\n\tconst [createdAtArray, setCreatedAtArray] = useState(\"\");\r\n\r\n\tasync function getAlltransactions() {\r\n\r\n\t\tlet userToken = Cookies.get(\"token\");\r\n\t\tif (!userToken) {\r\n\t\t\tauthenticateWithAPI();\r\n\t\t\tuserToken = Cookies.get(\"token\");\r\n\t\t}\r\n\t\tlet username = Cookies.get(\"username\");\r\n\t\tif (!username) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconst API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\r\n\t\tconst response = await fetch(`${API_URL}/transactions/alltransactions`, {\r\n\t\t  method: \"POST\",\r\n\t\t\theaders: userToken && { Authorization: `Bearer ${userToken}` },\r\n\t\t \tbody: JSON.stringify({\r\n\t\t\t\tusername: username\r\n\t\t  }),\r\n\t\t});\r\n\r\n    if (!response.ok) {\r\n\t\t\tconsole.log(response.statusText)\r\n\t\t  setError(response.statusText);\r\n\t\t\t} else {\r\n\t\t\t\tconst responseObj = await response.json();\r\n\t\t\t\tconst error = responseObj.error;\r\n\t\t\t\tconst to = responseObj.to;\r\n\t\t\t\tconst from = responseObj.from;\r\n\t\t\t\tconst amount = responseObj.amount;\r\n\t\t\t\tconst createdAt = responseObj.createdAt\r\n\t\t\t\tif (error) {\r\n\t\t\t\t\tsetError(error);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{toArray.map((to) =>\r\n\t\t\t\t<Card\r\n\t\t\t\t\tbgcolor=\"warning\"\r\n\t\t\t\t\theader=\"All Data\"\r\n\t\t\t\t\tbody={\r\n\t\t\t\t\t\t<>  \r\n\t\t\t\t\t\t\t<div className=\"alldata\">\r\n\t\t\t\t\t\t\t\t<h6>To: {destinationUser}</h6>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\r\n\r\n\t\t</>\r\n\t)\r\n};\r\n\r\n\t\r\nexport default AllData;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}